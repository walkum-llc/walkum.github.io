{"version":3,"file":"component---src-pages-restaurant-js-d98deac63ad05a31c4f1.js","mappings":"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","sources":["webpack://walkum/./src/components/links/headerLink.module.css","webpack://walkum/./src/components/links/modularHeaderLink.js","webpack://walkum/./src/components/merchant/QuantityControl.js","webpack://walkum/./src/components/merchant/styles.module.css","webpack://walkum/./src/components/merchant/storeItems/Item.js","webpack://walkum/./src/components/merchant/storeItems/Section.js","webpack://walkum/./src/components/merchant/storeItems/Category.js","webpack://walkum/./src/components/merchant/storeItems/index.js","webpack://walkum/./src/components/merchant/checkout/usePaypalButtons.js","webpack://walkum/./src/components/merchant/checkout/index.js","webpack://walkum/./src/components/merchant/cart.js","webpack://walkum/./src/components/merchant/index.js","webpack://walkum/./src/pages/restaurant.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var blink = \"headerLink-module--blink--bdfec\";\nexport var blinkingCursor = \"headerLink-module--blinkingCursor--59495\";\nexport var phraseContainer = \"headerLink-module--phraseContainer--9d1b4\";\nexport var responsiveSvg = \"headerLink-module--responsiveSvg--e821b\";\nexport var svgButton = \"headerLink-module--svgButton--d9016\";","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from 'react-redux';\nimport { Link } from \"gatsby\";\nimport * as styles from \"./headerLink.module.css\";\n\nconst ModularHeaderLink = ({ leftWord = \"walkum\", leftLinkTo=\"/\", rightWord, rightLinkTo=\".\", cursorColor = \"#FFD700\" }) => {\n    const [blinkSpeed, setBlinkSpeed] = useState(getRandomBlinkSpeed());\n    const accountInfo = useSelector((state) => state.account.accountInfo);\n\n    // Function to generate a random blink speed between 1s and 3s\n    function getRandomBlinkSpeed() {\n        return Math.random() * (3000 - 1000) + 1000; // Random value between 1000ms and 3000ms\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setBlinkSpeed(getRandomBlinkSpeed()); // Update blink speed every 5 seconds\n        }, 5000);\n\n        return () => clearInterval(interval); // Cleanup on unmount\n    }, []);\n\n    if (!accountInfo) {\n        return null;\n    }\n\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <div className={styles.phraseContainer}>\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 1200 300\"\n                    width=\"100%\"\n                    height=\"auto\"\n                    className={styles.responsiveSvg}\n                >\n                    <g transform=\"translate(600, 150)\" textAnchor=\"middle\">\n                        {/* Left Word */}\n                        <Link to={leftLinkTo}>\n                            <text\n                                x=\"-300\"\n                                fill=\"white\"\n                                fontFamily=\"Courier\"\n                                fontSize=\"90px\"\n                                className={styles.svgButton}\n                            >\n                                {leftWord}\n                            </text>\n                        </Link>\n\n                        {/* Blinking Cursor */}\n                        <text\n                            x=\"0\"\n                            fill={cursorColor}\n                            fontFamily=\"Courier\"\n                            fontSize=\"90px\"\n                            fontWeight=\"bold\"\n                            className={styles.blinkingCursor}\n                            style={{\n                                animationDuration: `${blinkSpeed}ms`,\n                                transform: \"scale(5, 5)\",\n                            }}\n                        >\n                            |\n                        </text>\n\n                        {/* Right Word */}\n                        <Link to={rightLinkTo}>\n                            <text\n                                x=\"300\"\n                                fill=\"white\"\n                                fontFamily=\"Courier\"\n                                fontSize=\"90px\"\n                                className={styles.svgButton}\n                            >\n                                {rightWord}\n                            </text>\n                        </Link>\n                    </g>\n                </svg>\n            </div>\n        </div>\n    );\n};\n\nexport default ModularHeaderLink;\n","import React from \"react\";\n\nconst QuantityControl = ({ quantity, stock, onDecrease, onIncrease }) => (\n    <div>\n        <button\n            onClick={(e) => {\n                e.stopPropagation();\n                onDecrease();\n            }}\n\n        >\n            -\n        </button>\n        <span>   {quantity}   </span>\n        <button\n            onClick={(e) => {\n                e.stopPropagation();\n                onIncrease();\n            }}\n        >\n            +\n        </button>\n    </div>\n);\n\nexport default QuantityControl;\n","// extracted by mini-css-extract-plugin\nexport var cart = \"styles-module--cart--d7a47\";\nexport var cartIcon = \"styles-module--cartIcon--8a034\";\nexport var cartTable = \"styles-module--cartTable--d19e3\";\nexport var cartToggleButton = \"styles-module--cartToggleButton--c057a\";\nexport var cartToggleContainer = \"styles-module--cartToggleContainer--edce5\";\nexport var category = \"styles-module--category--8436a\";\nexport var categoryHeader = \"styles-module--categoryHeader--16eb4\";\nexport var categorySection = \"styles-module--categorySection--f1108\";\nexport var closeButton = \"styles-module--closeButton--5a3f6\";\nexport var del = \"styles-module--del--281ce\";\nexport var emptyCartMessage = \"styles-module--emptyCartMessage--fe4f3\";\nexport var fullScreenImage = \"styles-module--fullScreenImage--10982\";\nexport var fullScreenModal = \"styles-module--fullScreenModal--07a3c\";\nexport var grandTotal = \"styles-module--grandTotal--7e4b2\";\nexport var item = \"styles-module--item--2b47c\";\nexport var itemBackground = \"styles-module--itemBackground--30ce9\";\nexport var itemImage = \"styles-module--itemImage--d83f7\";\nexport var itemList = \"styles-module--itemList--6f49f\";\nexport var modalContent = \"styles-module--modalContent--0a097\";\nexport var priceEach = \"styles-module--priceEach--04a90\";\nexport var quant = \"styles-module--quant--b5a04\";\nexport var removeButton = \"styles-module--removeButton--45abe\";\nexport var sectionHeader = \"styles-module--sectionHeader--6846b\";\nexport var toggleIcon = \"styles-module--toggleIcon--84634\";\nexport var tot = \"styles-module--tot--d3a80\";","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport QuantityControl from \"../QuantityControl\";\nimport * as styles from \"../styles.module.css\";\nimport {\n    toggleItemInCart,\n    updateItemQuantity,\n    getMerchantMode,\n} from \"../../../state/onlineStoreSlice\";\n\nconst Item = ({ item, cart, dispatch, handleItemClick }) => {\n\n    const merchantMode = useSelector(getMerchantMode);\n    const isInCart = (id) => cart.some((cartItem) => cartItem.id === id);\n    const quantity = isInCart(item.id) ? cart.find((cartItem) => cartItem.id === item.id).quantity : 1;\n\n    const handleToggle = () => {\n        dispatch(toggleItemInCart(item));\n    };\n\n    const handleQuantityChange = (quantity) => {\n        dispatch(updateItemQuantity({ id: item.id, quantity }));\n    };\n\n    return (\n        <div className={styles.item} onClick={() => handleItemClick(item)}>\n            <img src={item.image} alt={item.name} className={styles.itemImage} />\n            <h3>{item.name}</h3>\n            <p>{item.description}</p>\n            <p>${item.price}</p>\n            {merchantMode ? (\n                <div>\n                    <p># Remaining: {item.stock}</p>\n                    {isInCart(item.id) ? (\n                        <button onClick={handleToggle} className={styles.removeButton}>\n                            Remove from Cart\n                        </button>\n                    ) : (\n                        <button onClick={handleToggle} disabled={item.stock <= 0}>\n                            Add to Cart\n                        </button>\n                    )}\n                    {isInCart(item.id) && (\n                        <QuantityControl\n                            quantity={quantity}\n                            stock={item.stock}\n                            onDecrease={() => handleQuantityChange(Math.max(1, quantity - 1))}\n                            onIncrease={() => handleQuantityChange(Math.min(item.stock, quantity + 1))}\n                        />\n                    )}\n                </div>\n            ) : null}\n        </div>\n    );\n};\n\nexport default Item;\n","import React from \"react\";\nimport Item from \"./Item\";\nimport * as styles from \"../styles.module.css\";\n\nconst Section = ({\n    section,\n    items,\n    category,\n    openSection,\n    setOpenSection,\n    handleItemClick,\n    cart,\n    dispatch,\n}) => {\n    const toggleSection = () => {\n        const newSection =\n            openSection?.category === category && openSection?.section === section\n                ? null\n                : { category, section };\n        setOpenSection(newSection);\n\n        // Scroll the section header into view\n        if (newSection) {\n            setTimeout(() => {\n                const sectionElement = document.getElementById(`section-${section}`);\n                if (sectionElement) {\n                    sectionElement.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n                }\n            }, 0);\n        }\n    };\n\n    return (\n        <div className={styles.section}>\n            {section && (\n                <h3\n                    id={`section-${section}`}\n                    className={styles.sectionHeader}\n                    onClick={toggleSection}\n                >\n                    {section}\n                </h3>\n            )}\n            {(openSection?.category === category && openSection?.section === section) || !section ? (\n                <div className={styles.itemList}>\n                    {items.map((item) => (\n                        <Item\n                            key={item.id}\n                            item={item}\n                            cart={cart}\n                            dispatch={dispatch}\n                            handleItemClick={handleItemClick}\n                        />\n                    ))}\n                </div>\n            ) : null}\n        </div>\n    );\n};\n\nexport default Section;\n","import React from \"react\";\nimport Section from \"./Section\";\nimport * as styles from \"../styles.module.css\";\n\nconst Category = ({\n    category,\n    categorySections,\n    openCategory,\n    setOpenCategory,\n    openSection,\n    setOpenSection,\n    handleItemClick,\n    cart,\n    dispatch,\n}) => {\n    const toggleCategory = () => {\n        const newCategory = openCategory === category ? null : category;\n        setOpenCategory(newCategory);\n\n        // Collapse all sections if the category is closed\n        if (!newCategory) {\n            setOpenSection(null);\n        }\n\n        // Scroll the category header into view\n        if (newCategory) {\n            setTimeout(() => {\n                const categoryElement = document.getElementById(`category-${category}`);\n                if (categoryElement) {\n                    categoryElement.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n                }\n            }, 0);\n        }\n    };\n\n    return (\n        <div className={styles.category}>\n            <h2\n                id={`category-${category}`}\n                className={styles.categoryHeader}\n                onClick={toggleCategory}\n            >\n                {category}\n            </h2>\n            {openCategory === category && (\n                <div className={styles.sectionList}>\n                    {Array.from(categorySections.entries()).map(([section, items]) => (\n                        <Section\n                            key={section}\n                            section={section}\n                            items={items}\n                            category={category}\n                            openSection={openSection}\n                            setOpenSection={setOpenSection}\n                            handleItemClick={handleItemClick}\n                            cart={cart}\n                            dispatch={dispatch}\n                        />\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Category;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggleItemInCart, updateItemQuantity, selectCart } from \"../../../state/onlineStoreSlice\";\nimport Category from \"./Category\";\nimport * as styles from \"../styles.module.css\";\n\nconst ItemList = () => {\n    const dispatch = useDispatch();\n    const cart = useSelector(selectCart);\n    const storeItems = useSelector((state) => state.onlineStore.storeItems);\n\n    // Group items by category and section\n    const groupedItems = new Map();\n    storeItems.forEach((item) => {\n        if (!groupedItems.has(item.category)) {\n            groupedItems.set(item.category, new Map());\n        }\n        const categorySections = groupedItems.get(item.category);\n        if (!categorySections.has(item.section)) {\n            categorySections.set(item.section, []);\n        }\n        categorySections.get(item.section).push(item);\n    });\n\n    const [openCategory, setOpenCategory] = useState(null);\n    const [openSection, setOpenSection] = useState(null);\n    const [selectedItem, setSelectedItem] = useState(null);\n\n    const handleItemClick = (item) => {\n        setSelectedItem(item);\n    };\n\n    return (\n        <div className={styles.itemListContainer}>\n            {Array.from(groupedItems.entries()).map(([category, categorySections]) => (\n                <Category\n                    key={category}\n                    category={category}\n                    categorySections={categorySections}\n                    openCategory={openCategory}\n                    setOpenCategory={setOpenCategory}\n                    openSection={openSection}\n                    setOpenSection={setOpenSection}\n                    handleItemClick={handleItemClick}\n                    cart={cart}\n                    dispatch={dispatch}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default ItemList;\n","import { useEffect, useRef } from \"react\";\n\nconst usePaypalButtons = ({ cart, paypalRef, onApprove, createOrder }) => {\n    const paypalRenderedRef = useRef(false);\n\n    useEffect(() => {\n        console.log(\"\\nEnvironment Variables:\", JSON.stringify({\n            PAYPAL_CLIENT_ID: process.env.PAYPAL_CLIENT_ID ? \"***\" : undefined,\n            SERVER_IP: process.env.SERVER_IP,\n            PORT: process.env.PORT,\n        },null,2));\n\n        if (paypalRenderedRef.current) {\n            console.log(\"PayPal buttons already rendered. Skipping initialization.\");\n            return;\n        }\n\n        const script = document.createElement(\"script\");\n\n        // Check if the user is on a mobile device\n        const isMobile = /Mobi|Android/i.test(navigator.userAgent);\n\n        let paypalEnv = process.env.NODE_ENV === 'production' ? 'https://www.paypal.com' : 'https://www.sandbox.paypal.com';\n        let buyerCountryParam = process.env.NODE_ENV !== 'production' ? '&buyer-country=US' : '';\n\n        // Set script.src with shared parameters\n        script.src = `${paypalEnv}/sdk/js?client-id=${encodeURIComponent(process.env.PAYPAL_CLIENT_ID)}${buyerCountryParam}&currency=USD&components=buttons&enable-funding=paypal,venmo,card&commit=true&intent=capture${isMobile ? '&integration-date=2021-02-01' : ''}`;\n\n        script.async = true;\n\n        script.onload = () => {\n            if (window.paypal && paypalRef.current) {\n                paypalRenderedRef.current = true;\n                window.paypal.Buttons({\n                    style: {\n                        shape: \"pill\",\n                        layout: \"vertical\",\n                        color: \"blue\",\n                        label: \"pay\",\n                    },\n                    createOrder,\n                    onApprove,\n                }).render(paypalRef.current);\n            } else {\n                console.error(\"PayPal SDK not loaded properly.\");\n            }\n        };\n\n        document.body.appendChild(script);\n\n        return () => {\n            if (paypalRenderedRef.current) {\n                console.log(\"Cleaning up PayPal buttons.\");\n                paypalRenderedRef.current = false;\n            }\n\n            if (document.body.contains(script)) {\n                document.body.removeChild(script);\n            }\n        };\n    }, [cart, paypalRef, createOrder, onApprove]);\n};\n\nexport default usePaypalButtons;\n","import React, { useRef } from \"react\";\nimport { clearCart } from \"../../../state/onlineStoreSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as styles from \"./index.module.css\";\nimport usePaypalButtons from \"./usePaypalButtons\";\n\nconst PaypalButton = ({ cart }) => {\n    const dispatch = useDispatch();\n    const paypalRef = useRef(null);\n\n    const serverIP = process.env.SERVER_IP;\n    const port = process.env.PORT;\n\n    const merchantEmail = useSelector((state) => state.account.accountInfo.email);\n\n    const createOrder = async (data, actions) => {\n        try {\n            const totalAmount = cart.reduce(\n                (sum, item) => sum + parseFloat(item.price) * item.quantity,\n                0\n            ).toFixed(2);\n\n            const response = await fetch(`https://${serverIP}:${port}/api/orders`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ cart }),\n            });\n\n            const orderData = await response.json();\n            console.log(\"createOrder Response:\", orderData);\n\n            if (orderData.id) {\n                return orderData.id;\n            }\n            throw new Error(\"Failed to create order\");\n        } catch (error) {\n            console.error(\"createOrder Error:\", error);\n            throw new Error(\"Could not initiate PayPal Checkout\");\n        }\n    };\n\n    const onApprove = async (data, actions) => {\n        try {\n            const response = await fetch(\n                `https://${serverIP}:${port}/api/orders/${data.orderID}/capture`,\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify({ cart, merchantEmail }),\n                }\n            );\n\n            const orderData = await response.json();\n            console.log(\"onApprove Response:\", orderData);\n\n            if (orderData?.purchase_units?.[0]?.payments?.captures?.[0]) {\n                const transaction =\n                    orderData?.purchase_units?.[0]?.payments?.captures?.[0];\n                console.log(\"Transaction completed:\", transaction);\n\n                dispatch(clearCart());\n            } else {\n                throw new Error(\"Capture failed\");\n            }\n        } catch (error) {\n            console.error(\"onApprove Error:\", error);\n            alert(\"Sorry, your transaction could not be processed.\");\n        }\n    };\n\n    // Initialize PayPal buttons\n    usePaypalButtons({ cart, paypalRef, createOrder, onApprove });\n\n    return (\n        <div ref={paypalRef}></div>\n    );\n};\n\nexport default PaypalButton;\n","import * as styles from \"./styles.module.css\";\nimport * as otherstyles from \"../../styles/index.module.css\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCart, updateItemQuantity, toggleItemInCart } from '../../state/onlineStoreSlice';\nimport PayPalButtons from \"./checkout\";\nimport QuantityControl from \"./QuantityControl\";\n\nconst ViewCart = () => {\n    const dispatch = useDispatch();\n    const cart = useSelector(selectCart);\n\n    const handleQuantityChange = (item, quantity) => {\n        const newQuantity = Math.max(1, Math.min(quantity, item.stock)); // Limit between 1 and stock\n        dispatch(updateItemQuantity({ id: item.id, quantity: newQuantity }));\n    };\n\n    const handleRemoveItem = (item) => {\n        dispatch(toggleItemInCart(item)); // Use toggle to remove item\n    };\n\n    if (!cart || cart.length === 0) {\n        return (\n            <div className={styles.emptyCartMessage}>\n                <p>Your cart is empty</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className={styles.cart}>\n            <br />\n            <table className={styles.cartTable}>\n                <thead>\n                    <tr>\n                        <th>Item</th>\n                        <th className={styles.quant}>Quantity</th>\n                        <th className={styles.tot}>Total</th>\n                        <th className={styles.del}>X</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {cart.map((item, index) => {\n                        const price = Number(item.price) || 0;\n                        const quantity = Number(item.quantity) || 0;\n                        const total = price * quantity;\n\n                        return (\n                            <tr key={index}>\n                                <td className={otherstyles.center}>\n                                    {item.name || \"Unnamed Item\"}<br />\n                                    <span className={styles.priceEach}>${price.toFixed(2)}</span>\n                                </td>\n                                <td>\n                                    <QuantityControl\n                                        quantity={quantity}\n                                        stock={item.stock}\n                                        onDecrease={() => handleQuantityChange(item, Math.max(1, quantity - 1))}\n                                        onIncrease={() => handleQuantityChange(item, Math.min(item.stock, quantity + 1))}\n                                        />\n                                </td>\n                                <td className={styles.tot}>${total.toFixed(2)}</td>\n                                <td>\n                                    <button\n                                        onClick={() => handleRemoveItem(item)}\n                                        className={styles.removeButton}\n                                    >\n                                        X\n                                    </button>\n                                </td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n            <h3 className={styles.grandTotal}>\n                Grand Total: $\n                {cart.reduce(\n                    (total, item) =>\n                        total + (Number(item.price) || 0) * (Number(item.quantity) || 0),\n                    0\n                ).toFixed(2)}\n            </h3>\n\n            <PayPalButtons cart={cart} />\n        </div>\n    );\n};\n\nexport default ViewCart;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport StoreItems from './storeItems';\nimport ShoppingCart from './cart';\nimport Footer from '../footer';\nimport ModularHeaderLink from \"../links/modularHeaderLink\";\nimport {\n    toggleCartView,\n    selectCartVisibility,\n    updateStoreItems,\n    cleanCart,\n    selectCart,\n    setMerchantMode,\n} from '../../state/onlineStoreSlice';\nimport * as styles from \"./styles.module.css\";\nimport Loading from \"../loading\";\nimport * as otherstyles from \"../../styles/index.module.css\";\nimport {\n    useKeyValue,\n    useMenu,\n} from \"../../spreadsheet/useSheet\";\n\nconst ShoppingPage = ({\n    merchantID = `1Y825bTozBNpQFz3rZNCtHkACbSbOO9W48L3_01QuLQY`,\n    merchantMode = true,\n    merchantSheet = `products`,\n}) => {\n    const dispatch = useDispatch();\n    const isCartVisible = useSelector(selectCartVisibility);\n    const cart = useSelector(selectCart);\n\n    const { loading, error, data: menuData } = useMenu({\n        spreadsheetId: merchantID,\n        sheetName: merchantSheet,\n    });\n\n    useEffect(() => {\n        if (!loading && !error && menuData) {\n            dispatch(updateStoreItems(menuData));\n            dispatch(cleanCart()); // Validate cart after store items update\n        }\n    }, [loading, error, menuData, dispatch]);\n\n    useEffect(() => {\n        dispatch(setMerchantMode(merchantMode));\n    }, [merchantMode, dispatch]);\n\n    const handleToggleCart = () => {\n        dispatch(toggleCartView());\n    };\n\n    if (loading) return <Loading />;\n    if (error) return <p>Error loading store items: {error}</p>;\n\n    // Only render the cart button and toggle if there are items in the cart\n    const showCartButton = cart && cart.length > 0;\n\n    return (\n        <div>\n            <div className={otherstyles.container}>\n                <ModularHeaderLink\n                    rightWord=\"merch\"\n                    cursorColor=\"#39FF14\"\n                />\n                {showCartButton && (\n                <button className={styles.cartToggleButton} onClick={handleToggleCart}>\n                {isCartVisible ? (\n                    <div className={styles.cartToggleContainer}>\n                        <span>Hide</span>\n                        <span className={styles.cartIcon} role=\"img\" aria-label=\"cart\">{'\\u{1F6D2}'}</span>\n                    </div>\n                ) : (\n                    <div className={styles.cartToggleContainer}>\n                        <span>Your Cart</span>\n                        <span className={styles.cartIcon} role=\"img\" aria-label=\"cart\">{'\\u{1F6D2}'}</span>\n                    </div>\n                )}\n                </button>\n                )}\n\n                {isCartVisible && <ShoppingCart />}\n            </div>\n            <div className={styles.itemListContainer}>\n                <StoreItems />\n            </div>\n            <div className={otherstyles.container}>\n                <Footer />\n            </div>\n        </div>\n    );\n};\n\nexport default ShoppingPage;\n","import React from \"react\";\nimport MerchantStore from \"../components/merchant\"\nimport SEO from \"../components/SEO\";\n\nconst RestaurantPage = () => {\n\n    return (\n        <div>\n            <SEO\n                title=\"Walkum | Menu\"\n                description=\"Walkum Menu Hosting. Reliable menu rending, whether it's online or printed PDF for your customers to hold. Don't fumble around with your prices ever again.\"\n                keywords=\"walkum, retsaurant, menu, rendering, inline, software\"\n                url=\"https://walkum.xyz/restaurant\"\n                />\n            <main>\n                <MerchantStore\n                    merchantMode={false}\n                    merchantSheet=\"menu_\"\n                    />\n            </main>\n        </div>\n    )\n};\n\nexport default RestaurantPage;\n"],"names":["svgButton","_ref","leftWord","leftLinkTo","rightWord","rightLinkTo","cursorColor","blinkSpeed","setBlinkSpeed","useState","getRandomBlinkSpeed","accountInfo","useSelector","state","account","Math","random","useEffect","interval","setInterval","clearInterval","React","style","display","justifyContent","className","xmlns","viewBox","width","height","transform","textAnchor","Link","to","x","fill","fontFamily","fontSize","styles","fontWeight","animationDuration","quantity","stock","onDecrease","onIncrease","onClick","e","stopPropagation","cartIcon","cartTable","cartToggleButton","cartToggleContainer","categoryHeader","del","emptyCartMessage","grandTotal","itemImage","itemList","priceEach","quant","removeButton","sectionHeader","tot","item","cart","dispatch","handleItemClick","merchantMode","getMerchantMode","isInCart","id","some","cartItem","find","handleToggle","toggleItemInCart","handleQuantityChange","updateItemQuantity","src","image","alt","name","description","price","disabled","QuantityControl","max","min","section","items","category","openSection","setOpenSection","toggleSection","newSection","setTimeout","sectionElement","document","getElementById","scrollIntoView","behavior","block","map","Item","key","categorySections","openCategory","setOpenCategory","toggleCategory","newCategory","categoryElement","Array","from","entries","_ref2","Section","ItemList","useDispatch","selectCart","storeItems","onlineStore","groupedItems","Map","forEach","has","set","get","push","selectedItem","setSelectedItem","Category","paypalRef","onApprove","createOrder","paypalRenderedRef","useRef","console","log","JSON","stringify","PAYPAL_CLIENT_ID","process","undefined","SERVER_IP","PORT","current","script","createElement","isMobile","test","navigator","userAgent","paypalEnv","encodeURIComponent","async","onload","window","paypal","Buttons","shape","layout","color","label","render","error","body","appendChild","contains","removeChild","serverIP","port","merchantEmail","email","usePaypalButtons","data","actions","reduce","sum","parseFloat","toFixed","response","fetch","method","headers","orderData","json","Error","_orderData$purchase_u","_orderData$purchase_u2","_orderData$purchase_u3","_orderData$purchase_u4","orderID","purchase_units","payments","captures","_orderData$purchase_u5","_orderData$purchase_u6","_orderData$purchase_u7","_orderData$purchase_u8","transaction","clearCart","alert","ref","ViewCart","newQuantity","length","index","Number","total","otherstyles","handleRemoveItem","PayPalButtons","merchantID","merchantSheet","isCartVisible","selectCartVisibility","loading","menuData","useMenu","spreadsheetId","sheetName","updateStoreItems","cleanCart","setMerchantMode","Loading","showCartButton","ModularHeaderLink","handleToggleCart","toggleCartView","role","ShoppingCart","StoreItems","Footer","RestaurantPage","SEO","title","keywords","url","MerchantStore"],"sourceRoot":""}