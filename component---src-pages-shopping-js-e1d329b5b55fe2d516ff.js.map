{"version":3,"file":"component---src-pages-shopping-js-e1d329b5b55fe2d516ff.js","mappings":"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","sources":["webpack://walkum/./src/components/footer.js","webpack://walkum/./src/components/header.js","webpack://walkum/./src/components/spreadsheet/useSheet.js","webpack://walkum/./src/styles/shopping.module.css","webpack://walkum/./src/components/merchant/QuantityControl.js","webpack://walkum/./src/components/merchant/itemDetailModal.js","webpack://walkum/./src/components/merchant/storeItems.js","webpack://walkum/./src/components/merchant/checkout/usePaypalButtons.js","webpack://walkum/./src/components/merchant/checkout/index.js","webpack://walkum/./src/components/merchant/checkout/mockPurchase.js","webpack://walkum/./src/components/merchant/checkout/index.module.css","webpack://walkum/./src/components/merchant/cart.js","webpack://walkum/./src/components/merchant/index.js","webpack://walkum/./src/pages/shopping.js","webpack://walkum/./src/styles/index.module.css"],"sourcesContent":["import * as styles from \"../styles/index.module.css\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst IndexPage = () => {\n    return (\n        <div className={styles.footer}>\n            <p style={{ fontSize: \"10px\" }}>\n                Made with <span>&#10084;&#65039;</span> by{\" \"}\n                <Link to=\"https://walkum.xyz/sites\">Walkum</Link>\n            </p>\n        </div>\n    );\n};\n\nexport default IndexPage;\n\nexport const Head = () => <title>Home Page</title>;\n","import * as styles from \"../styles/index.module.css\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst IndexPage = () => {\n    return (\n        <header>\n            <div className={styles.headerContainer}>\n                <Link to=\"/\" className={styles.headerLink}>\n                    <h1 className={styles.headerTitle}>walkum</h1>\n                </Link>\n            </div>\n        </header>\n    );\n};\n\nexport default IndexPage;\n\nexport const Head = () => <title>Home Page</title>;\n","import { useEffect, useState } from \"react\";\n\nconst useKeyValue = ({ spreadsheetId, sheetName }) => {\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [data, setData] = useState(null);\n\n    const parseCSVKeyValue = (csv) => {\n        const rows = csv.trim().split(\"\\n\");\n\n        return rows.reduce((acc, row) => {\n            const columns = row.match(/(\".*?\"|[^\",\\s]+)(?=\\s*,|\\s*$)/g) // Regex to split by commas, ignoring commas inside quotes\n            ?.map(col => col.replace(/(^\"|\"$)/g, \"\").trim());\n\n            if (!columns || columns.length === 0) return acc;\n\n            const key = columns[0]; // First column as key\n            if (!key) return acc; // Skip rows with no key\n\n            const values = columns.slice(1).filter(value => value !== \"\"); // Remove empty strings\n\n            acc[key] = values.length === 1 ? values[0] : values; // Single value or array\n            return acc;\n        }, {});\n    };\n\n    useEffect(() => {\n        const fetchSpreadsheetData = async () => {\n            const url = `https://docs.google.com/spreadsheets/d/${spreadsheetId}/gviz/tq?tqx=out:csv&sheet=${sheetName}`;\n\n            try {\n                const response = await fetch(url);\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n\n                const csvText = await response.text();\n                const jsonData = parseCSVKeyValue(csvText);\n\n                setData(jsonData);\n                setLoading(false);\n            } catch (err) {\n                console.error(\"Error fetching spreadsheet data:\", err);\n                setError(err.message);\n                setLoading(false);\n            }\n        };\n\n        fetchSpreadsheetData();\n    }, [spreadsheetId, sheetName]);\n\n    return { loading, error, data };\n};\n\nconst useKeyValueArray = ({ spreadsheetId, sheetName }) => {\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [data, setData] = useState([]);\n\n    const parseCSVKeyValueArray = (csv) => {\n        const rows = csv.trim().split(\"\\n\");\n\n        return rows.map(row => {\n            const columns = row\n                .match(/(\".*?\"|[^\",\\s]+)(?=\\s*,|\\s*$)/g) // Regex to split by commas, ignoring commas inside quotes\n                ?.map(col => col.replace(/(^\"|\"$)/g, \"\").trim());\n            if (!columns || columns.length < 2) return null; // Ignore rows without at least two columns\n            return [columns[0], columns[1]]; // Return as [columnA, columnB]\n        }).filter(Boolean); // Filter out null rows\n    };\n\n    useEffect(() => {\n        const fetchSpreadsheetData = async () => {\n            const url = `https://docs.google.com/spreadsheets/d/${spreadsheetId}/gviz/tq?tqx=out:csv&sheet=${sheetName}`;\n\n            try {\n                const response = await fetch(url);\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n\n                const csvText = await response.text();\n                const jsonData = parseCSVKeyValueArray(csvText);\n\n                setData(jsonData);\n                setLoading(false);\n            } catch (err) {\n                console.error(\"Error fetching spreadsheet data:\", err);\n                setError(err.message);\n                setLoading(false);\n            }\n        };\n\n        fetchSpreadsheetData();\n    }, [spreadsheetId, sheetName]);\n\n    return { loading, error, data };\n};\n\nconst useMenu = ({ spreadsheetId, sheetName }) => {\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [data, setData] = useState([]);\n\n    const parseCSVMenu = (csv) => {\n        const rows = csv.trim().split(\"\\n\");\n\n        const headers = rows\n        .shift()\n        .match(/(\".*?\"|[^\",\\s]+)(?=\\s*,|\\s*$)/g)\n        ?.map(h => h.replace(/(^\"|\"$)/g, \"\"));\n\n        if (!headers) return [];\n\n        return rows.map(row => {\n            const values = row\n            .match(/(\".*?\"|[^\",\\s]+)(?=\\s*,|\\s*$)/g)\n            ?.map(value => value.replace(/(^\"|\"$)/g, \"\"));\n\n            const obj = {};\n            headers.forEach((header, index) => {\n                if (header) {\n                    obj[header] = values?.[index] || null;\n                }\n            });\n            return obj;\n        });\n    };\n\n    useEffect(() => {\n        const fetchSpreadsheetData = async () => {\n            const url = `https://docs.google.com/spreadsheets/d/${spreadsheetId}/gviz/tq?tqx=out:csv&sheet=${sheetName}`;\n\n            try {\n                const response = await fetch(url);\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n\n                const csvText = await response.text();\n                const jsonData = parseCSVMenu(csvText);\n\n                setData(jsonData);\n                setLoading(false);\n            } catch (err) {\n                console.error(\"Error fetching spreadsheet data:\", err);\n                setError(err.message);\n                setLoading(false);\n            }\n        };\n\n        fetchSpreadsheetData();\n    }, [spreadsheetId, sheetName]);\n\n    return { loading, error, data };\n};\n\nexport {\n    useKeyValue,\n    useKeyValueArray,\n    useMenu,\n};\n","// extracted by mini-css-extract-plugin\nexport var closeButton = \"shopping-module--closeButton--fdfa2\";\nexport var fullScreenImage = \"shopping-module--fullScreenImage--3e206\";\nexport var fullScreenModal = \"shopping-module--fullScreenModal--d5a88\";\nexport var item = \"shopping-module--item--7b82f\";\nexport var itemBackground = \"shopping-module--itemBackground--65546\";\nexport var itemImage = \"shopping-module--itemImage--78d3d\";\nexport var itemList = \"shopping-module--itemList--d6d43\";\nexport var modalContent = \"shopping-module--modalContent--12e4c\";\nexport var priceEach = \"shopping-module--priceEach--2c4e6\";\nexport var removeButton = \"shopping-module--removeButton--04c91\";","import React from \"react\";\n\nconst QuantityControl = ({ quantity, stock, onDecrease, onIncrease }) => (\n    <div>\n        <button\n            onClick={(e) => {\n                e.stopPropagation();\n                onDecrease();\n            }}\n\n        >\n            -\n        </button>\n        <span>   {quantity}   </span>\n        <button\n            onClick={(e) => {\n                e.stopPropagation();\n                onIncrease();\n            }}\n        >\n            +\n        </button>\n    </div>\n);\n\nexport default QuantityControl;\n","import * as styles from \"../../styles/shopping.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport QuantityControl from \"./QuantityControl\";\n\nconst ItemDetailModal = ({\n    item,\n    onClose,\n    handleToggle,\n    handleQuantityChange,\n    isInCart,\n    cart,\n}) => {\n    const itemInCart = cart.find((cartItem) => cartItem.id === item.id); // Get item from cart\n    const [quantity, setQuantity] = useState(itemInCart ? itemInCart.quantity : 1);\n\n    // Synchronize quantity with Redux when the cart updates\n    useEffect(() => {\n        if (itemInCart) {\n            setQuantity(itemInCart.quantity);\n        }\n    }, [itemInCart]);\n\n    const handleQuantityUpdate = (newQuantity) => {\n        const clampedQuantity = Math.min(Math.max(newQuantity, 1), item.stock);\n        setQuantity(clampedQuantity);\n        handleQuantityChange(item, clampedQuantity); // Update Redux store\n    };\n\n    useEffect(() => {\n        const handleKeyDown = (event) => {\n            if (event.key === \"Escape\") {\n                onClose(); // Close modal on Escape key\n            }\n        };\n\n        // Add event listener for Escape key\n        document.addEventListener(\"keydown\", handleKeyDown);\n\n        // Cleanup listener on unmount\n        return () => {\n            document.removeEventListener(\"keydown\", handleKeyDown);\n        };\n    }, [onClose]);\n\n    return (\n        <div className={styles.fullScreenModal} onClick={onClose}>\n            <div\n                className={styles.modalContent}\n                onClick={(e) => e.stopPropagation()} // Prevent closing on modal content click\n            >\n                <button className={styles.closeButton} onClick={onClose}>\n                    &times; Close\n                </button>\n                <img\n                    src={item.image}\n                    alt={item.name}\n                    className={styles.fullScreenImage}\n                />\n                <h3>{item.name}</h3>\n                <p>{item.description}</p>\n                <p>Price: ${item.price}</p>\n                <p>Stock: {item.stock}</p>\n\n                {isInCart(item.id) && (\n                    <div>\n                        <label htmlFor=\"quantityInput\">Quantity: </label>\n                        <QuantityControl\n                            quantity={quantity}\n                            stock={item.stock}\n                            onDecrease={() => handleQuantityUpdate(quantity - 1)}\n                            onIncrease={() => handleQuantityUpdate(quantity + 1)}\n                        />\n                    </div>\n                )}\n\n                <button\n                    onClick={() => handleToggle(item)}\n                    className={isInCart(item.id) ? styles.removeButton : \"\"}\n                    disabled={item.stock <= 0}\n                >\n                    {isInCart(item.id) ? \"Remove from Cart\" : \"Add to Cart\"}\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default ItemDetailModal;\n","import * as styles from \"../../styles/shopping.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    toggleItemInCart,\n    updateItemQuantity,\n    selectCart,\n} from \"../../state/onlineStoreSlice\";\nimport ItemDetailModal from \"./itemDetailModal\";\nimport QuantityControl from \"./QuantityControl\";\n\nconst ItemList = () => {\n    const dispatch = useDispatch();\n    const cart = useSelector(selectCart);\n    const storeItems = useSelector((state) => state.onlineStore.storeItems);\n\n    const [selectedItem, setSelectedItem] = useState(null);\n    const [isSingleColumn, setIsSingleColumn] = useState(false);\n\n    // Check for single-column layout using a media query\n    useEffect(() => {\n        const checkColumnLayout = () => {\n            const element = document.querySelector(`.${styles.itemList}`);\n            if (element) {\n                const computedStyle = getComputedStyle(element);\n                const gridTemplateColumns = computedStyle.getPropertyValue(\"grid-template-columns\");\n                setIsSingleColumn(gridTemplateColumns.split(\" \").length === 1);\n            }\n        };\n\n        checkColumnLayout();\n        window.addEventListener(\"resize\", checkColumnLayout);\n\n        return () => {\n            window.removeEventListener(\"resize\", checkColumnLayout);\n        };\n    }, []);\n\n    const handleToggle = (item) => {\n        dispatch(toggleItemInCart(item));\n    };\n\n    const handleQuantityChange = (item, quantity) => {\n        dispatch(updateItemQuantity({ id: item.id, quantity }));\n    };\n\n    const isInCart = (id) => cart.some((item) => item.id === id);\n\n    const handleItemClick = (item) => {\n        if (!isSingleColumn) {\n            setSelectedItem(item); // Only allow modal if not single-column\n        }\n    };\n\n    const handleCloseModal = () => {\n        setSelectedItem(null);\n    };\n\n    return (\n        <div className={styles.itemList}>\n            {storeItems.map((item, index) => {\n                const itemInCart = cart.find((cartItem) => cartItem.id === item.id);\n                const quantity = itemInCart ? itemInCart.quantity : 1;\n\n                return (\n                    <div\n                        key={index}\n                        className={styles.item}\n                        onClick={() => handleItemClick(item)}\n                    >\n                        <img\n                            src={item.image}\n                            alt={item.name}\n                            className={styles.itemImage}\n                            width={100}\n                            height={100}\n                        />\n                        <h3>{item.name}</h3>\n                        <p>{item.description}</p>\n                        <p>${item.price}</p>\n                        <p># Remaining: {item.stock}</p>\n\n                        {isInCart(item.id) ? (\n                            <button\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    handleToggle(item);\n                                }}\n                                className={styles.removeButton}\n                            >\n                                Remove from Cart\n                            </button>\n                        ) : (\n                            <button\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    handleToggle(item);\n                                }}\n                                disabled={item.stock <= 0}\n                            >\n                                Add to Cart\n                            </button>\n                        )}\n\n                        {isInCart(item.id) && (\n                            <QuantityControl\n                                quantity={quantity}\n                                stock={item.stock}\n                                onDecrease={() => handleQuantityChange(item, Math.max(1, quantity - 1))}\n                                onIncrease={() => handleQuantityChange(item, Math.min(item.stock, quantity + 1))}\n                                />\n                        )}\n                    </div>\n                );\n            })}\n\n            {!isSingleColumn && selectedItem && (\n                <ItemDetailModal\n                    item={selectedItem}\n                    onClose={handleCloseModal}\n                    handleToggle={handleToggle}\n                    handleQuantityChange={handleQuantityChange}\n                    cart={cart}\n                    isInCart={isInCart}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default ItemList;\n","import { useEffect, useRef } from \"react\";\n\nconst usePaypalButtons = ({ cart, paypalRef, onApprove, createOrder }) => {\n    const paypalRenderedRef = useRef(false);\n\n    useEffect(() => {\n        if (paypalRenderedRef.current) {\n            console.log(\"PayPal buttons already rendered. Skipping initialization.\");\n            return;\n        }\n\n        const script = document.createElement(\"script\");\n        script.src = `https://www.paypal.com/sdk/js?client-id=${process.env.GATSBY_PAYPAL_CLIENT_ID}&buyer-country=US&currency=USD&components=buttons&enable-funding=venmo,paylater,card`;\n        script.async = true;\n\n        script.onload = () => {\n            if (window.paypal && paypalRef.current) {\n                paypalRenderedRef.current = true;\n                window.paypal.Buttons({\n                    style: {\n                        shape: \"rect\",\n                        layout: \"vertical\",\n                        color: \"gold\",\n                        label: \"paypal\",\n                    },\n                    createOrder,\n                    onApprove,\n                }).render(paypalRef.current);\n            }\n        };\n\n        document.body.appendChild(script);\n\n        return () => {\n            if (paypalRenderedRef.current) {\n                console.log(\"Cleaning up PayPal buttons.\");\n                paypalRenderedRef.current = false;\n            }\n\n            if (document.body.contains(script)) {\n                document.body.removeChild(script);\n            }\n        };\n    }, [cart, paypalRef, createOrder, onApprove]);\n};\n\nexport default usePaypalButtons;\n","import React, { useRef } from \"react\";\nimport { clearCart } from \"../../../state/onlineStoreSlice\";\nimport { useDispatch } from \"react-redux\";\nimport * as styles from \"./index.module.css\";\nimport usePaypalButtons from \"./usePaypalButtons\";\nimport { handleMockPurchase } from \"./mockPurchase\";\n\nconst PaypalButton = ({ cart }) => {\n    const dispatch = useDispatch();\n    const paypalRef = useRef(null);\n\n    const serverIP = process.env.GATSBY_SERVER_IP;\n    const port = process.env.GATSBY_PORT;\n\n    // Handlers for PayPal buttons\n    const createOrder = async (data, actions) => {\n        try {\n            const totalAmount = cart.reduce(\n                (sum, item) => sum + parseFloat(item.price) * item.quantity,\n                0\n            ).toFixed(2);\n\n            const response = await fetch(`http://${serverIP}:${port}/api/orders`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ cart }),\n            });\n\n            const orderData = await response.json();\n            console.log(\"createOrder Response:\", orderData);\n\n            if (orderData.id) {\n                return orderData.id;\n            }\n            throw new Error(\"Failed to create order\");\n        } catch (error) {\n            console.error(\"createOrder Error:\", error);\n            throw new Error(\"Could not initiate PayPal Checkout\");\n        }\n    };\n\n    const onApprove = async (data, actions) => {\n        try {\n            const response = await fetch(\n                `http://${serverIP}:${port}/api/orders/${data.orderID}/capture`,\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                }\n            );\n\n            const orderData = await response.json();\n            console.log(\"onApprove Response:\", orderData);\n\n            if (orderData?.purchase_units?.[0]?.payments?.captures?.[0]) {\n                const transaction =\n                    orderData?.purchase_units?.[0]?.payments?.captures?.[0];\n                console.log(\"Transaction completed:\", transaction);\n\n                dispatch(clearCart());\n            } else {\n                throw new Error(\"Capture failed\");\n            }\n        } catch (error) {\n            console.error(\"onApprove Error:\", error);\n            alert(\"Sorry, your transaction could not be processed.\");\n        }\n    };\n\n    // Initialize PayPal buttons\n    usePaypalButtons({ cart, paypalRef, createOrder, onApprove });\n\n    return (\n        <div>\n            <div ref={paypalRef}></div>\n            <button\n                onClick={() => handleMockPurchase({ cart, dispatch, clearCart })}\n                className={styles.mockButton}\n            >\n                Mock Purchase\n            </button>\n        </div>\n    );\n};\n\nexport default PaypalButton;\n","export const handleMockPurchase = async ({ cart, dispatch, clearCart }) => {\n\n    const serverIP = process.env.GATSBY_SERVER_IP;\n    const port = process.env.GATSBY_PORT;\n\n    console.log(`server = ${serverIP}`)\n\n    try {\n        const response = await fetch(`http://${serverIP}:${port}/api/mock-purchase`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ cart }),\n        });\n        const mockData = await response.json();\n        console.log(\"Mock Purchase Response:\", mockData);\n\n        if (mockData.success) {\n            dispatch(clearCart());\n            alert(\"Mock purchase succeeded!\");\n        } else {\n            throw new Error(\"Mock purchase failed\");\n        }\n    } catch (error) {\n        console.error(\"Mock Purchase Error:\", error);\n        alert(\"Mock purchase failed. Check console for details.\");\n    }\n};\n","// extracted by mini-css-extract-plugin\nexport var mockButton = \"index-module--mockButton--85e22\";","import * as styles from \"../../styles/shopping.module.css\";\nimport * as otherstyles from \"../../styles/index.module.css\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCart, updateItemQuantity, toggleItemInCart } from '../../state/onlineStoreSlice';\nimport PayPalButtons from \"./checkout\";\nimport QuantityControl from \"./QuantityControl\";\n\nconst ViewCart = () => {\n    const dispatch = useDispatch();\n    const cart = useSelector(selectCart);\n\n    const handleQuantityChange = (item, quantity) => {\n        const newQuantity = Math.max(1, Math.min(quantity, item.stock)); // Limit between 1 and stock\n        dispatch(updateItemQuantity({ id: item.id, quantity: newQuantity }));\n    };\n\n    const handleRemoveItem = (item) => {\n        dispatch(toggleItemInCart(item)); // Use toggle to remove item\n    };\n\n    if (!cart || cart.length === 0) {\n        return null\n    }\n\n    return (\n        <div className={styles.cart}>\n            <br />\n            <table className={styles.cartTable}>\n                <thead>\n                    <tr>\n                        <th>Item</th>\n                        <th>Quantity</th>\n                        <th>Total</th>\n                        <th>Remove</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {cart.map((item, index) => {\n                        const price = Number(item.price) || 0;\n                        const quantity = Number(item.quantity) || 0;\n                        const total = price * quantity;\n\n                        return (\n                            <tr key={index}>\n                                <td className={otherstyles.center}>\n                                    {item.name || \"Unnamed Item\"}<br />\n                                    <span className={styles.priceEach}>${price.toFixed(2)}</span>\n                                </td>\n                                <td>\n                                    <QuantityControl\n                                        quantity={quantity}\n                                        stock={item.stock}\n                                        onDecrease={() => handleQuantityChange(item, Math.max(1, quantity - 1))}\n                                        onIncrease={() => handleQuantityChange(item, Math.min(item.stock, quantity + 1))}\n                                        />\n                                </td>\n                                <td>${total.toFixed(2)}</td>\n                                <td>\n                                    <button\n                                        onClick={() => handleRemoveItem(item)}\n                                        className={styles.removeButton}\n                                    >\n                                        Remove\n                                    </button>\n                                </td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n            <h3 className={styles.grandTotal}>\n                Grand Total: $\n                {cart.reduce(\n                    (total, item) =>\n                        total + (Number(item.price) || 0) * (Number(item.quantity) || 0),\n                    0\n                ).toFixed(2)}\n            </h3>\n\n            <PayPalButtons cart={cart} />\n        </div>\n    );\n};\n\nexport default ViewCart;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport StoreItems from './storeItems';\nimport ShoppingCart from './cart';\nimport Footer from '../footer';\nimport Header from '../header';\nimport {\n    toggleCartView,\n    selectCartVisibility,\n    updateStoreItems,\n    cleanCart,\n} from '../../state/onlineStoreSlice';\nimport config from '../../../config';\nimport * as styles from \"../../styles/shopping.module.css\";\nimport * as otherstyles from \"../../styles/index.module.css\";\nimport {\n    useKeyValue,\n    useMenu,\n} from \"../spreadsheet/useSheet\";\n\nconst ShoppingPage = () => {\n    const dispatch = useDispatch();\n    const isCartVisible = useSelector(selectCartVisibility);\n\n    const { loading, error, data: menuData } = useMenu({\n        spreadsheetId: config.spreadsheets.merchant.id,\n        sheetName: \"procucts\",\n    });\n\n    useEffect(() => {\n        if (!loading && !error && menuData) {\n            dispatch(updateStoreItems(menuData));\n            dispatch(cleanCart()); // Validate cart after store items update\n        }\n    }, [loading, error, menuData, dispatch]);\n\n    const handleToggleCart = () => {\n        dispatch(toggleCartView());\n    };\n\n    if (loading) return <p>Loading store items...</p>;\n    if (error) return <p>Error loading store items: {error}</p>;\n\n    return (\n        <div>\n            <div className={otherstyles.container}>\n                <Header />\n                <button className={styles.cartToggleButton} onClick={handleToggleCart}>\n                    {isCartVisible ? 'Hide Cart' : 'View Cart'}\n                </button>\n                {isCartVisible && <ShoppingCart />}\n            </div>\n            <div className={styles.itemListContainer}>\n                <StoreItems />\n            </div>\n            <div className={otherstyles.container}>\n                <Footer />\n            </div>\n        </div>\n    );\n};\n\nexport default ShoppingPage;\n","import React from \"react\";\nimport MerchantStore from \"../components/merchant\"\nimport TestMenu from \"../components/spreadsheet/TestMenu\"\nimport TestKeyValue from \"../components/spreadsheet/TestKeyValue\"\nconst config = require(\"../../config\");\n\nconst MerchantPage = () => {\n\n    return <MerchantStore />\n    // return <TestKeyValue spreadsheetId={config.spreadsheets.merchant.id} sheetName={\"info\"} />\n    // return <TestMenu spreadsheetId={config.spreadsheets.merchant.id} sheetName={\"products\"} />\n};\n\nexport default MerchantPage;\n","// extracted by mini-css-extract-plugin\nexport var arrow_span = \"index-module--arrow_span--f48bd\";\nexport var blink = \"index-module--blink--322c7\";\nexport var blinkingCursor = \"index-module--blinking-cursor--e2be6\";\nexport var bottom = \"index-module--bottom--eeaab\";\nexport var center = \"index-module--center--6c63b\";\nexport var center_text_block = \"index-module--center_text_block--9d594\";\nexport var centeredContent = \"index-module--centered-content--a9414\";\nexport var chart = \"index-module--chart--bfad1\";\nexport var chart_padding = \"index-module--chart_padding--43000\";\nexport var clapper = \"index-module--clapper--2467e\";\nexport var container = \"index-module--container--9e7f9\";\nexport var footer = \"index-module--footer--8d7ca\";\nexport var green = \"index-module--green--21d20\";\nexport var headerContainer = \"index-module--header-container--ec9de\";\nexport var headerLink = \"index-module--header-link--92332\";\nexport var headerTitle = \"index-module--header-title--f56cb\";\nexport var header_border = \"index-module--header_border--a723c\";\nexport var header_left = \"index-module--header_left--4a4e3\";\nexport var languageBash = \"index-module--language-bash--4fcf1\";\nexport var languageJavascript = \"index-module--language-javascript--99e27\";\nexport var languagePython = \"index-module--language-python--5f701\";\nexport var languageTxt = \"index-module--language-txt--08b27\";\nexport var large_header = \"index-module--large_header--bc628\";\nexport var list = \"index-module--list--d72e8\";\nexport var med_header = \"index-module--med_header--15f3f\";\nexport var p_left = \"index-module--p_left--cb0fc\";\nexport var pay = \"index-module--pay--78de8\";\nexport var pay_free = \"index-module--pay_free--38215\";\nexport var pay_look = \"index-module--pay_look--39f53\";\nexport var picture = \"index-module--picture--f5ee0\";\nexport var please_email = \"index-module--please_email--87a1a\";\nexport var purple = \"index-module--purple--30baa\";\nexport var responsiveText = \"index-module--responsive-text--ea4a4\";\nexport var right = \"index-module--right--775d2\";\nexport var service_header = \"index-module--service_header--d0303\";\nexport var simpleClose = \"index-module--simple-close--ed079\";\nexport var simpleContainer = \"index-module--simple-container--18cad\";\nexport var simpleExtInfo = \"index-module--simple-ext-info--3d384\";\nexport var simplePrint = \"index-module--simple-print--e1f95\";\nexport var small_text = \"index-module--small_text--1233c\";\nexport var svgButton = \"index-module--svg-button--23da3\";\nexport var textLeft = \"index-module--text-left--7bf00\";\nexport var title_link = \"index-module--title_link--c0cdd\";\nexport var title_picture = \"index-module--title_picture--75853\";\nexport var title_picture_small = \"index-module--title_picture_small--2b61b\";\nexport var tooltip = \"index-module--tooltip--b5884\";\nexport var tooltiptext = \"index-module--tooltiptext--e375b\";\nexport var video = \"index-module--video--97740\";\nexport var video_container = \"index-module--video_container--dd5e5\";"],"names":["IndexPage","React","className","styles","style","fontSize","Link","to","useKeyValue","_ref","spreadsheetId","sheetName","loading","setLoading","useState","error","setError","data","setData","useEffect","async","url","response","fetch","ok","Error","status","csvText","text","jsonData","trim","split","reduce","acc","row","_row$match","columns","match","map","col","replace","length","key","values","slice","filter","value","err","console","message","fetchSpreadsheetData","useKeyValueArray","_ref2","_row$match2","Boolean","useMenu","_ref3","csv","_rows$shift$match","rows","headers","shift","h","_row$match3","obj","forEach","header","index","parseCSVMenu","closeButton","fullScreenImage","fullScreenModal","itemImage","itemList","modalContent","priceEach","removeButton","quantity","stock","onDecrease","onIncrease","onClick","e","stopPropagation","item","onClose","handleToggle","handleQuantityChange","isInCart","cart","itemInCart","find","cartItem","id","setQuantity","handleQuantityUpdate","newQuantity","clampedQuantity","Math","min","max","handleKeyDown","event","document","addEventListener","removeEventListener","src","image","alt","name","description","price","htmlFor","QuantityControl","disabled","ItemList","dispatch","useDispatch","useSelector","selectCart","storeItems","state","onlineStore","selectedItem","setSelectedItem","isSingleColumn","setIsSingleColumn","checkColumnLayout","element","querySelector","gridTemplateColumns","getComputedStyle","getPropertyValue","window","toggleItemInCart","updateItemQuantity","some","handleItemClick","width","height","ItemDetailModal","handleCloseModal","paypalRef","onApprove","createOrder","paypalRenderedRef","useRef","current","log","script","createElement","process","GATSBY_PAYPAL_CLIENT_ID","onload","paypal","Buttons","shape","layout","color","label","render","body","appendChild","contains","removeChild","serverIP","GATSBY_SERVER_IP","port","GATSBY_PORT","usePaypalButtons","actions","sum","parseFloat","toFixed","method","JSON","stringify","orderData","json","_orderData$purchase_u","_orderData$purchase_u2","_orderData$purchase_u3","_orderData$purchase_u4","orderID","purchase_units","payments","captures","_orderData$purchase_u5","_orderData$purchase_u6","_orderData$purchase_u7","_orderData$purchase_u8","transaction","clearCart","alert","ref","mockData","success","handleMockPurchase","ViewCart","Number","total","otherstyles","handleRemoveItem","PayPalButtons","ShoppingPage","isCartVisible","selectCartVisibility","menuData","config","spreadsheets","merchant","updateStoreItems","cleanCart","Header","handleToggleCart","toggleCartView","ShoppingCart","StoreItems","Footer","require","MerchantPage","MerchantStore","arrow_span","blinkingCursor","center","center_text_block","chart_padding","container","footer","green","headerContainer","headerLink","headerTitle","header_border","header_left","large_header","med_header","p_left","pay","pay_free","please_email","purple","service_header","small_text","svgButton","title_picture","title_picture_small","tooltip","tooltiptext"],"sourceRoot":""}