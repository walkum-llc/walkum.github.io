{"version":3,"file":"component---src-pages-sites-index-js-71d8c7f8c823d5c9892c.js","mappings":"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","sources":["webpack://walkum/./src/components/Sites/buyNowButton.js","webpack://walkum/./src/components/links/headerLink.module.css","webpack://walkum/./src/components/links/modularHeaderLink.js","webpack://walkum/./src/components/spreadsheet/renderTable.js","webpack://walkum/./src/components/Sites/CursorWords.js","webpack://walkum/./src/components/Sites/index.js","webpack://walkum/./src/pages/sites/index.js","webpack://walkum/./src/components/Sites/index.module.css"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\"\nimport * as styles from \"./index.module.css\"\n\nconst Purchase = () => {\n    return (\n        <div>\n            <Link to=\"https://www.paypal.com/ncp/payment/PGJJUECG46ED8\" className={styles.buyNowLink} target=\"_blank\" >\n                <span className={styles.buyNow}>\n                BUY NOW\n                </span>\n            </Link>\n        </div>\n    );\n};\n\nexport default Purchase;\n","// extracted by mini-css-extract-plugin\nexport var blink = \"headerLink-module--blink--bdfec\";\nexport var blinkingCursor = \"headerLink-module--blinkingCursor--59495\";\nexport var phraseContainer = \"headerLink-module--phraseContainer--9d1b4\";\nexport var responsiveSvg = \"headerLink-module--responsiveSvg--e821b\";\nexport var svgButton = \"headerLink-module--svgButton--d9016\";","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from 'react-redux';\nimport { Link } from \"gatsby\";\nimport * as styles from \"./headerLink.module.css\";\n\nconst ModularHeaderLink = ({ label, linkTo=\".\", cursorColor = \"#FFD700\" }) => {\n    const [blinkSpeed, setBlinkSpeed] = useState(getRandomBlinkSpeed());\n    const accountInfo = useSelector((state) => state.account.accountInfo);\n\n    // Function to generate a random blink speed between 1s and 3s\n    function getRandomBlinkSpeed() {\n        return Math.random() * (3000 - 1000) + 1000; // Random value between 1000ms and 3000ms\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setBlinkSpeed(getRandomBlinkSpeed()); // Update blink speed every 5 seconds\n        }, 5000);\n\n        return () => clearInterval(interval); // Cleanup on unmount\n    }, []);\n\n    if (!accountInfo) {\n        return null;\n    }\n\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <div className={styles.phraseContainer}>\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 1200 300\"\n                width=\"100%\"\n                height=\"auto\"\n                className={styles.responsiveSvg}\n            >\n                <g transform=\"translate(600, 150)\" textAnchor=\"middle\">\n                    {/* \"walkum\" Text */}\n                    <Link to=\"/\">\n                        <text\n                            x=\"-300\"\n                            fill=\"white\"\n                            fontFamily=\"Courier\"\n                            fontSize=\"90px\"\n                            className={styles.svgButton}\n                        >\n                            {accountInfo.name}\n                        </text>\n                    </Link>\n\n                    {/* Blinking Cursor */}\n                    <text\n                        x=\"0\"\n                        fill={cursorColor}\n                        fontFamily=\"Courier\"\n                        fontSize=\"90px\"\n                        fontWeight=\"bold\"\n                        className={styles.blinkingCursor}\n                        style={{\n                            animationDuration: `${blinkSpeed}ms`,\n                            transform: \"scale(5, 5)\",\n                        }}\n                    >\n                        |\n                    </text>\n\n                    {/* Dynamic label */}\n                    <Link to={`${linkTo}`}>\n                        <text\n                            x=\"300\"\n                            fill=\"white\"\n                            fontFamily=\"Courier\"\n                            fontSize=\"90px\"\n                            className={styles.svgButton}\n                        >\n                            {label}\n                        </text>\n                    </Link>\n                </g>\n            </svg>\n        </div>\n        </div>\n    );\n};\n\nexport default ModularHeaderLink;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport * as styles from \"../../styles/index.module.css\";\n\nconst formatPrice = (price) => {\n    const match = price.match(/^(-?\\d+(\\.\\d+)?)(.*)$/); // Regex to split numeric part and additional text\n    if (!match) return price; // Return the original value if it doesn't match the pattern\n\n    const numericPart = parseFloat(match[1]);\n    const unit = match[3]?.trim(); // Capture any unit like '/hour'\n\n    if (isNaN(numericPart)) return price; // Return original value if numeric part is not a number\n\n    const formattedPrice = numericPart < 0 ? `-$${Math.abs(numericPart)}` : `$${numericPart}`;\n    return (unit ? `${formattedPrice} ${unit}` : formattedPrice).replace(/\\s+/g, ''); // Remove spaces\n};\n\nconst TableRows = ({ data }) => {\n    return data.map((item, index) => (\n        <tr key={index}>\n            <td>\n                <div className={styles.pay_free}>\n                    {item.paylink ? (\n                        <Link to={item.paylink} target=\"_blank\" rel=\"noopener noreferrer\">\n                            <button className={styles.priceButton}>\n                                <strong>{formatPrice(item.price)}</strong>\n                            </button>\n                        </Link>\n                    ) : (\n                        <strong>{formatPrice(item.price)}</strong>\n                    )}\n                </div>\n            </td>\n            <td>\n                <div className={styles.chart_padding}>\n                    <strong>{item.description}</strong>\n                    <br />\n                    <span className={styles.small_text}>\n                        <strong>{item.details}</strong>\n                    </span>\n                </div>\n            </td>\n        </tr>\n    ));\n};\n\nexport default TableRows;\n","import React, { useState, useEffect } from 'react';\nimport * as styles from './index.module.css';\nimport * as otherstyles from '../../styles/index.module.css';\n\nconst getRandomColor = () => {\n    const neonColors = [\n        '#FF00FF', // Magenta\n        '#00FFFF', // Cyan\n        '#FFFF00', // Yellow\n        '#FF4500', // Orange\n        '#32CD32', // Lime Green\n        '#FF1493', // Deep Pink\n        '#1E90FF', // Dodger Blue\n        '#FFD700', // Gold\n        '#ADFF2F', // Green Yellow\n        '#FF69B4'  // Hot Pink\n    ];\n    return neonColors[Math.floor(Math.random() * neonColors.length)];\n};\n\nconst CursorWords = ({ texts, colorWordIndexes = [] }) => {\n    const [currentText, setCurrentText] = useState('');\n    const [currentIndex, setCurrentIndex] = useState(0); // Track which word we're on\n    const [isTyping, setIsTyping] = useState(true); // Track typing or backspacing\n    const maxLength = Math.max(...texts.map((text) => text.length)) + 1; // Longest word's length + 1 for cursor\n    const [colorMap, setColorMap] = useState([]);\n\n    useEffect(() => {\n        const typingSpeed = 75; // Milliseconds per character when typing\n        const backspacingSpeed = 50; // Milliseconds per character when backspacing\n        const pauseAfterTyping = 900; // Pause after typing a word\n        const pauseAfterDeleting = 200; // Pause after deleting a word\n\n        let timeoutId;\n\n        if (isTyping) {\n            if (currentText.length < texts[currentIndex].length) {\n                // Add the next character\n                timeoutId = setTimeout(() => {\n                    setCurrentText((prev) => {\n                        const nextText = texts[currentIndex].slice(0, prev.length + 1);\n                        if (colorWordIndexes.includes(currentIndex)) {\n                            setColorMap((prevMap) => [\n                                ...prevMap,\n                                getRandomColor(),\n                            ]);\n                        }\n                        return nextText;\n                    });\n                }, typingSpeed);\n            } else {\n                // Pause after completing the word\n                timeoutId = setTimeout(() => setIsTyping(false), pauseAfterTyping);\n            }\n        } else {\n            if (currentText.length > 0) {\n                // Remove the last character\n                timeoutId = setTimeout(() => {\n                    setCurrentText((prev) => prev.slice(0, -1));\n                    if (colorWordIndexes.includes(currentIndex)) {\n                        setColorMap((prevMap) => prevMap.slice(0, -1));\n                    }\n                }, backspacingSpeed);\n            } else {\n                // Move to the next word and start typing again\n                timeoutId = setTimeout(() => {\n                    setIsTyping(true);\n                    setCurrentIndex((prev) => (prev + 1) % texts.length); // Loop through words\n                    setColorMap([]); // Reset color map for new word\n                }, pauseAfterDeleting);\n            }\n        }\n\n        return () => clearTimeout(timeoutId);\n    }, [currentText, isTyping, texts, currentIndex, colorWordIndexes]);\n\n    return (\n        <span style={{ width: `${maxLength}ch`, display: 'inline-block' }}>\n            {colorWordIndexes.includes(currentIndex)\n                ? currentText.split('').map((char, index) => (\n                      <span key={index} style={{ color: colorMap[index] || '#000' }}>\n                          {char}\n                      </span>\n                  ))\n                : currentText}\n            <span className={`${styles.cursor} ${styles.greenBrick}`}></span>\n        </span>\n    );\n};\n\nexport default CursorWords;\n","import * as styles from \"../../styles/index.module.css\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport Footer from \"../footer\";\nimport CursorWords from \"./CursorWords\";\nimport BuyNow from \"./buyNowButton\";\nimport ModularHeaderLink from \"../links/modularHeaderLink\";\nimport TableRows from \"../spreadsheet/renderTable\";\nimport { useMenu } from \"../spreadsheet/useSheet\";\nimport config from '../../../config'\n\nconst SitesPage = () => {\n\n    const { loading: serviceLoading, error: serviceError, data: serviceData } = useMenu({ spreadsheetId: config.spreadsheets.account.id, sheetName: 'web-services' });\n    const { loading: productLoading, error: productError, data: productData } = useMenu({ spreadsheetId: config.spreadsheets.account.id, sheetName: 'web-products' });\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.center}>\n                <ModularHeaderLink\n                    label=\"sites\"\n                    cursorColor=\"#9201C5\"\n                    />\n                <br />\n                <div className={styles.header_border}>\n                    <div className={styles.large_header}>\n                        <CursorWords\n                            texts={[\"CHEAP\", \"HIGH VALUE\"]}\n                        /><br />\n                        <CursorWords\n                            texts={[\"DARK-MODE\", \"ANY DESIGN\", \"ANY FUNCTION\", \"ANY CONCEPT\"]}\n                            colorWordIndexes={[1, 3]}\n                        /><br />\n                        <CursorWords\n                            texts={[\"WEBSITE\", \"WEB APP\"]}\n                        />{\" \"}\n                    </div>\n                </div>\n                <br />\n                <br />\n                <h2 className={styles.purple}>\n                    The bare-boned essentials to\n                    <br />\n                    <Link to=\"./demo\">CONTROL YOUR OWN WEBSITE</Link>\n                </h2>\n                <br />\n                <div className={styles.med_header}>NO SUBSCRIPTIONS</div>\n                <div className={styles.med_header}>NO EXPIRATION</div>\n                <div className={styles.med_header}>ON-DEMAND UPDATES</div>\n                <ul>\n                    <li>\n                        <p>\n                            <strong>See our <Link to=\"./demo\">CONTROL DEMO</Link></strong>\n                        </p>\n                    </li>\n                    <li>\n                        <p>\n                            <strong>See our <Link to=\"/restaurant\">Restaurant menu software</Link></strong>\n                        </p>\n                    </li>\n                    <li>\n                        <p>\n                            <strong>See our <Link to=\"/shop\">Merchant ordering software</Link></strong>\n                        </p>\n                    </li>\n                </ul>\n                <div className={[styles.large_header, styles.purple].join(\" \")}>\n                    We PROUDLY work different\n                </div>\n                <div className={styles.large_header}>Make the SMART CHOICE today!</div>\n                <br />\n                <br />\n                <BuyNow />\n                <br />\n                <br />\n                <div className={styles.header_left}>We have products</div>\n                <table className={styles.table}>\n                    <thead>\n                        <tr>\n                            <th className={styles.service_header}>PRICE</th>\n                            <th className={styles.service_header}>PRODUCTS (Customer Point-of-View)</th>\n                        </tr>\n                    </thead>\n                    <tbody><TableRows data={productData} /></tbody>\n                </table>\n\n                <br />\n                <div className={styles.header_left}>AND services</div>\n\n                <table className={styles.table}>\n                    <thead>\n                        <tr>\n                            <th className={styles.service_header}>PRICE</th>\n                            <th className={styles.service_header}>SERVICES (Customer Point-of-View)</th>\n                        </tr>\n                    </thead>\n                    <tbody><TableRows data={serviceData} /></tbody>\n                </table>\n\n                <br />\n                <p className={styles.small_text}>\n                    Walkum is not a domain registrar. You may bring us your domain address (address.com/.xyz/.info/.etc), or we can help you obtain one to initialize your configuration.\n                </p>\n                <h3>\n                    Email <a href=\"mailto:walkum.llc@gmail.com\">walkum.llc@gmail.com</a> to get your WEBSITE\n                </h3>\n\n                <Footer />\n            </div>\n        </div>\n    );\n};\n\nexport default SitesPage;\n","import React from \"react\"\nimport SEO from \"../../components/SEO\";\nimport Sites from \"../../components/Sites\";\n\nconst SitesPage = () => {\n    return (\n        <div>\n            <SEO\n                title=\"Walkum | Sites\"\n                description=\"Walkum offers affordable, dark-mode websites with no subscriptions or expiration. Get your internet presence live with on-demand updates and the essentials for a modern web experience.\"\n                keywords=\"cheap websites, dark mode websites, no subscription websites, custom websites, website tutorials, website hosting, affordable web development, software, Walkum\"\n                url=\"https://walkum.xyz/sites\"\n                />\n                \n            <main>\n                <Sites />\n            </main>\n        </div>\n    );\n};\n\nexport default SitesPage;\n","// extracted by mini-css-extract-plugin\nexport var blink = \"index-module--blink--754d7\";\nexport var buyNow = \"index-module--buyNow--f60ec\";\nexport var buyNowLink = \"index-module--buyNowLink--effa3\";\nexport var cursor = \"index-module--cursor--13784\";\nexport var greenBrick = \"index-module--greenBrick--581b8\";"],"names":["Purchase","React","Link","to","className","styles","target","svgButton","_ref","label","linkTo","cursorColor","blinkSpeed","setBlinkSpeed","useState","getRandomBlinkSpeed","accountInfo","useSelector","state","account","Math","random","useEffect","interval","setInterval","clearInterval","style","display","justifyContent","xmlns","viewBox","width","height","transform","textAnchor","x","fill","fontFamily","fontSize","name","fontWeight","animationDuration","formatPrice","price","_match$","match","numericPart","parseFloat","unit","trim","isNaN","formattedPrice","abs","replace","data","map","item","index","key","paylink","rel","description","details","getRandomColor","neonColors","floor","length","texts","colorWordIndexes","currentText","setCurrentText","currentIndex","setCurrentIndex","isTyping","setIsTyping","maxLength","max","apply","_toConsumableArray","text","colorMap","setColorMap","timeoutId","setTimeout","prev","nextText","slice","includes","prevMap","concat","clearTimeout","split","char","color","SitesPage","loading","serviceLoading","error","serviceError","serviceData","useMenu","spreadsheetId","config","spreadsheets","id","sheetName","productLoading","productError","productData","ModularHeaderLink","CursorWords","join","BuyNow","TableRows","href","Footer","SEO","title","keywords","url","Sites","buyNow","buyNowLink","cursor","greenBrick"],"sourceRoot":""}