{"version":3,"file":"component---src-pages-shopping-js-f7610728844951883c9d.js","mappings":"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","sources":["webpack://walkum/./src/components/footer.js","webpack://walkum/./src/components/header.js","webpack://walkum/./src/styles/shopping.module.css","webpack://walkum/./src/components/OnlineStore/QuantityControl.js","webpack://walkum/./src/components/OnlineStore/itemDetailModal.js","webpack://walkum/./src/components/OnlineStore/storeItems.js","webpack://walkum/./src/components/OnlineStore/checkout/usePaypalButtons.js","webpack://walkum/./src/components/OnlineStore/checkout/index.js","webpack://walkum/./src/components/OnlineStore/checkout/mockPurchase.js","webpack://walkum/./src/components/OnlineStore/checkout/index.module.css","webpack://walkum/./src/components/OnlineStore/cart.js","webpack://walkum/./src/components/OnlineStore/index.js","webpack://walkum/./src/pages/shopping.js","webpack://walkum/./src/styles/index.module.css"],"sourcesContent":["import * as styles from \"../styles/index.module.css\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst IndexPage = () => {\n    return (\n        <div className={styles.footer}>\n            <p style={{ fontSize: \"10px\" }}>\n                Made with <span>&#10084;&#65039;</span> by{\" \"}\n                <Link to=\"https://walkum.xyz/sites\">Walkum</Link>\n            </p>\n        </div>\n    );\n};\n\nexport default IndexPage;\n\nexport const Head = () => <title>Home Page</title>;\n","import * as styles from \"../styles/index.module.css\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst IndexPage = () => {\n    return (\n        <header>\n            <div className={styles.headerContainer}>\n                <Link to=\"/\" className={styles.headerLink}>\n                    <h1 className={styles.headerTitle}>walkum</h1>\n                </Link>\n            </div>\n        </header>\n    );\n};\n\nexport default IndexPage;\n\nexport const Head = () => <title>Home Page</title>;\n","// extracted by mini-css-extract-plugin\nexport var closeButton = \"shopping-module--closeButton--fdfa2\";\nexport var fullScreenImage = \"shopping-module--fullScreenImage--3e206\";\nexport var fullScreenModal = \"shopping-module--fullScreenModal--d5a88\";\nexport var item = \"shopping-module--item--7b82f\";\nexport var itemBackground = \"shopping-module--itemBackground--65546\";\nexport var itemImage = \"shopping-module--itemImage--78d3d\";\nexport var itemList = \"shopping-module--itemList--d6d43\";\nexport var modalContent = \"shopping-module--modalContent--12e4c\";\nexport var removeButton = \"shopping-module--removeButton--04c91\";","import React from \"react\";\n\nconst QuantityControl = ({ quantity, stock, onDecrease, onIncrease }) => (\n    <div>\n        <button\n            onClick={(e) => {\n                e.stopPropagation();\n                onDecrease();\n            }}\n\n        >\n            -\n        </button>\n        <span>   {quantity}   </span>\n        <button\n            onClick={(e) => {\n                e.stopPropagation();\n                onIncrease();\n            }}\n        >\n            +\n        </button>\n    </div>\n);\n\nexport default QuantityControl;\n","import * as styles from \"../../styles/shopping.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport QuantityControl from \"./QuantityControl\";\n\nconst ItemDetailModal = ({\n    item,\n    onClose,\n    handleToggle,\n    handleQuantityChange,\n    isInCart,\n    cart,\n}) => {\n    const itemInCart = cart.find((cartItem) => cartItem.id === item.id); // Get item from cart\n    const [quantity, setQuantity] = useState(itemInCart ? itemInCart.quantity : 1);\n\n    // Synchronize quantity with Redux when the cart updates\n    useEffect(() => {\n        if (itemInCart) {\n            setQuantity(itemInCart.quantity);\n        }\n    }, [itemInCart]);\n\n    const handleQuantityUpdate = (newQuantity) => {\n        const clampedQuantity = Math.min(Math.max(newQuantity, 1), item.stock);\n        setQuantity(clampedQuantity);\n        handleQuantityChange(item, clampedQuantity); // Update Redux store\n    };\n\n    useEffect(() => {\n        const handleKeyDown = (event) => {\n            if (event.key === \"Escape\") {\n                onClose(); // Close modal on Escape key\n            }\n        };\n\n        // Add event listener for Escape key\n        document.addEventListener(\"keydown\", handleKeyDown);\n\n        // Cleanup listener on unmount\n        return () => {\n            document.removeEventListener(\"keydown\", handleKeyDown);\n        };\n    }, [onClose]);\n\n    return (\n        <div className={styles.fullScreenModal} onClick={onClose}>\n            <div\n                className={styles.modalContent}\n                onClick={(e) => e.stopPropagation()} // Prevent closing on modal content click\n            >\n                <button className={styles.closeButton} onClick={onClose}>\n                    &times; Close\n                </button>\n                <img\n                    src={item.image}\n                    alt={item.name}\n                    className={styles.fullScreenImage}\n                />\n                <h3>{item.name}</h3>\n                <p>{item.description}</p>\n                <p>Price: ${item.price}</p>\n                <p>Stock: {item.stock}</p>\n\n                {isInCart(item.id) && (\n                    <div>\n                        <label htmlFor=\"quantityInput\">Quantity: </label>\n                        <QuantityControl\n                            quantity={quantity}\n                            stock={item.stock}\n                            onDecrease={() => handleQuantityUpdate(quantity - 1)}\n                            onIncrease={() => handleQuantityUpdate(quantity + 1)}\n                        />\n                    </div>\n                )}\n\n                <button\n                    onClick={() => handleToggle(item)}\n                    className={isInCart(item.id) ? styles.removeButton : \"\"}\n                    disabled={item.stock <= 0}\n                >\n                    {isInCart(item.id) ? \"Remove from Cart\" : \"Add to Cart\"}\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default ItemDetailModal;\n","import * as styles from \"../../styles/shopping.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    toggleItemInCart,\n    updateItemQuantity,\n    selectCart,\n} from \"../../state/onlineStoreSlice\";\nimport ItemDetailModal from \"./itemDetailModal\";\nimport QuantityControl from \"./QuantityControl\";\n\nconst ItemList = () => {\n    const dispatch = useDispatch();\n    const cart = useSelector(selectCart);\n    const storeItems = useSelector((state) => state.onlineStore.storeItems);\n\n    const [selectedItem, setSelectedItem] = useState(null);\n    const [isSingleColumn, setIsSingleColumn] = useState(false);\n\n    // Check for single-column layout using a media query\n    useEffect(() => {\n        const checkColumnLayout = () => {\n            const element = document.querySelector(`.${styles.itemList}`);\n            if (element) {\n                const computedStyle = getComputedStyle(element);\n                const gridTemplateColumns = computedStyle.getPropertyValue(\"grid-template-columns\");\n                setIsSingleColumn(gridTemplateColumns.split(\" \").length === 1);\n            }\n        };\n\n        checkColumnLayout();\n        window.addEventListener(\"resize\", checkColumnLayout);\n\n        return () => {\n            window.removeEventListener(\"resize\", checkColumnLayout);\n        };\n    }, []);\n\n    const handleToggle = (item) => {\n        dispatch(toggleItemInCart(item));\n    };\n\n    const handleQuantityChange = (item, quantity) => {\n        dispatch(updateItemQuantity({ id: item.id, quantity }));\n    };\n\n    const isInCart = (id) => cart.some((item) => item.id === id);\n\n    const handleItemClick = (item) => {\n        if (!isSingleColumn) {\n            setSelectedItem(item); // Only allow modal if not single-column\n        }\n    };\n\n    const handleCloseModal = () => {\n        setSelectedItem(null);\n    };\n\n    return (\n        <div className={styles.itemList}>\n            {storeItems.map((item, index) => {\n                const itemInCart = cart.find((cartItem) => cartItem.id === item.id);\n                const quantity = itemInCart ? itemInCart.quantity : 1;\n\n                return (\n                    <div\n                        key={index}\n                        className={styles.item}\n                        onClick={() => handleItemClick(item)}\n                    >\n                        <img\n                            src={item.image}\n                            alt={item.name}\n                            className={styles.itemImage}\n                            width={100}\n                            height={100}\n                        />\n                        <h3>{item.name}</h3>\n                        <p>{item.description}</p>\n                        <p>${item.price}</p>\n                        <p># Remaining: {item.stock}</p>\n\n                        {isInCart(item.id) ? (\n                            <button\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    handleToggle(item);\n                                }}\n                                className={styles.removeButton}\n                            >\n                                Remove from Cart\n                            </button>\n                        ) : (\n                            <button\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    handleToggle(item);\n                                }}\n                                disabled={item.stock <= 0}\n                            >\n                                Add to Cart\n                            </button>\n                        )}\n\n                        {isInCart(item.id) && (\n                            <QuantityControl\n                                quantity={quantity}\n                                stock={item.stock}\n                                onDecrease={() => handleQuantityChange(item, Math.max(1, quantity - 1))}\n                                onIncrease={() => handleQuantityChange(item, Math.min(item.stock, quantity + 1))}\n                                />\n                        )}\n                    </div>\n                );\n            })}\n\n            {!isSingleColumn && selectedItem && (\n                <ItemDetailModal\n                    item={selectedItem}\n                    onClose={handleCloseModal}\n                    handleToggle={handleToggle}\n                    handleQuantityChange={handleQuantityChange}\n                    cart={cart}\n                    isInCart={isInCart}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default ItemList;\n","import { useEffect, useRef } from \"react\";\n\nconst usePaypalButtons = ({ cart, paypalRef, onApprove, createOrder }) => {\n    const paypalRenderedRef = useRef(false);\n\n    useEffect(() => {\n        if (paypalRenderedRef.current) {\n            console.log(\"PayPal buttons already rendered. Skipping initialization.\");\n            return;\n        }\n\n        const script = document.createElement(\"script\");\n        script.src = `https://www.paypal.com/sdk/js?client-id=${process.env.PAYPAL_CLIENT_ID}&buyer-country=US&currency=USD&components=buttons&enable-funding=venmo,paylater,card`;\n        script.async = true;\n\n        script.onload = () => {\n            if (window.paypal && paypalRef.current) {\n                paypalRenderedRef.current = true;\n                window.paypal.Buttons({\n                    style: {\n                        shape: \"rect\",\n                        layout: \"vertical\",\n                        color: \"gold\",\n                        label: \"paypal\",\n                    },\n                    createOrder,\n                    onApprove,\n                }).render(paypalRef.current);\n            }\n        };\n\n        document.body.appendChild(script);\n\n        return () => {\n            if (paypalRenderedRef.current) {\n                console.log(\"Cleaning up PayPal buttons.\");\n                paypalRenderedRef.current = false;\n            }\n\n            if (document.body.contains(script)) {\n                document.body.removeChild(script);\n            }\n        };\n    }, [cart, paypalRef, createOrder, onApprove]);\n};\n\nexport default usePaypalButtons;\n","import React, { useRef } from \"react\";\nimport { clearCart } from \"../../../state/onlineStoreSlice\";\nimport { useDispatch } from \"react-redux\";\nimport * as styles from \"./index.module.css\";\nimport usePaypalButtons from \"./usePaypalButtons\";\nimport { handleMockPurchase } from \"./mockPurchase\";\n\nconst PaypalButton = ({ cart }) => {\n    const dispatch = useDispatch();\n    const paypalRef = useRef(null);\n\n    // Handlers for PayPal buttons\n    const createOrder = async (data, actions) => {\n        try {\n            const totalAmount = cart.reduce(\n                (sum, item) => sum + parseFloat(item.price) * item.quantity,\n                0\n            ).toFixed(2);\n\n            const response = await fetch(\"http://localhost:8080/api/orders\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ cart }),\n            });\n\n            const orderData = await response.json();\n            console.log(\"createOrder Response:\", orderData);\n\n            if (orderData.id) {\n                return orderData.id;\n            }\n            throw new Error(\"Failed to create order\");\n        } catch (error) {\n            console.error(\"createOrder Error:\", error);\n            throw new Error(\"Could not initiate PayPal Checkout\");\n        }\n    };\n\n    const onApprove = async (data, actions) => {\n        try {\n            const response = await fetch(\n                `http://localhost:8080/api/orders/${data.orderID}/capture`,\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                }\n            );\n\n            const orderData = await response.json();\n            console.log(\"onApprove Response:\", orderData);\n\n            if (orderData?.purchase_units?.[0]?.payments?.captures?.[0]) {\n                const transaction =\n                    orderData?.purchase_units?.[0]?.payments?.captures?.[0];\n                console.log(\"Transaction completed:\", transaction);\n\n                dispatch(clearCart());\n            } else {\n                throw new Error(\"Capture failed\");\n            }\n        } catch (error) {\n            console.error(\"onApprove Error:\", error);\n            alert(\"Sorry, your transaction could not be processed.\");\n        }\n    };\n\n    // Initialize PayPal buttons\n    usePaypalButtons({ cart, paypalRef, createOrder, onApprove });\n\n    return (\n        <div>\n            <div ref={paypalRef}></div>\n            <button\n                onClick={() => handleMockPurchase({ cart, dispatch, clearCart })}\n                className={styles.mockButton}\n            >\n                Mock Purchase\n            </button>\n        </div>\n    );\n};\n\nexport default PaypalButton;\n","export const handleMockPurchase = async ({ cart, dispatch, clearCart }) => {\n    try {\n        const response = await fetch(\"http://localhost:8080/api/mock-purchase\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ cart }),\n        });\n        const mockData = await response.json();\n        console.log(\"Mock Purchase Response:\", mockData);\n\n        if (mockData.success) {\n            dispatch(clearCart());\n            alert(\"Mock purchase succeeded!\");\n        } else {\n            throw new Error(\"Mock purchase failed\");\n        }\n    } catch (error) {\n        console.error(\"Mock Purchase Error:\", error);\n        alert(\"Mock purchase failed. Check console for details.\");\n    }\n};\n","// extracted by mini-css-extract-plugin\nexport var mockButton = \"index-module--mockButton--c6f84\";","import * as styles from \"../../styles/shopping.module.css\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCart, updateItemQuantity, toggleItemInCart } from '../../state/onlineStoreSlice';\nimport PayPalButtons from \"./checkout\";\nimport QuantityControl from \"./QuantityControl\";\n\nconst ViewCart = () => {\n    const dispatch = useDispatch();\n    const cart = useSelector(selectCart);\n\n    const handleQuantityChange = (item, quantity) => {\n        const newQuantity = Math.max(1, Math.min(quantity, item.stock)); // Limit between 1 and stock\n        dispatch(updateItemQuantity({ id: item.id, quantity: newQuantity }));\n    };\n\n    const handleRemoveItem = (item) => {\n        dispatch(toggleItemInCart(item)); // Use toggle to remove item\n    };\n\n    if (!cart || cart.length === 0) {\n        return <p className={styles.emptyCartMessage}>Your cart is empty!</p>;\n    }\n\n    return (\n        <div className={styles.cart}>\n            <h2>Your Cart</h2>\n            <table className={styles.cartTable}>\n                <thead>\n                    <tr>\n                        <th>Item</th>\n                        <th>Price</th>\n                        <th>Quantity</th>\n                        <th>Total</th>\n                        <th>Remove</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {cart.map((item, index) => {\n                        const price = Number(item.price) || 0;\n                        const quantity = Number(item.quantity) || 0;\n                        const total = price * quantity;\n\n                        return (\n                            <tr key={index}>\n                                <td>{item.name || \"Unnamed Item\"}</td>\n                                <td>${price.toFixed(2)}</td>\n                                <td>\n                                    <QuantityControl\n                                        quantity={quantity}\n                                        stock={item.stock}\n                                        onDecrease={() => handleQuantityChange(item, Math.max(1, quantity - 1))}\n                                        onIncrease={() => handleQuantityChange(item, Math.min(item.stock, quantity + 1))}\n                                        />\n                                </td>\n                                <td>${total.toFixed(2)}</td>\n                                <td>\n                                    <button\n                                        onClick={() => handleRemoveItem(item)}\n                                        className={styles.removeButton}\n                                    >\n                                        Remove\n                                    </button>\n                                </td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n            <h3 className={styles.grandTotal}>\n                Grand Total: $\n                {cart.reduce(\n                    (total, item) =>\n                        total + (Number(item.price) || 0) * (Number(item.quantity) || 0),\n                    0\n                ).toFixed(2)}\n            </h3>\n\n            <PayPalButtons cart={cart} />\n        </div>\n    );\n};\n\nexport default ViewCart;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport StoreItems from './storeItems';\nimport ShoppingCart from './cart';\nimport Footer from '../footer';\nimport Header from '../header';\nimport {\n    toggleCartView,\n    selectCartVisibility,\n    updateStoreItems,\n    cleanCart,\n} from '../../state/onlineStoreSlice';\nimport config from '../../../config';\nimport * as styles from \"../../styles/shopping.module.css\";\nimport * as otherstyles from \"../../styles/index.module.css\";\n\nconst fetchSpreadsheetData = async (sheetName) => {\n    const url = `https://docs.google.com/spreadsheets/d/${config.SPREADSHEET_ID_PRODUCTS}/gviz/tq?tqx=out:csv&sheet=${sheetName}`;\n    try {\n        const response = await fetch(url);\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const csvText = await response.text();\n        return parseCSV(csvText);\n    } catch (error) {\n        console.error(`Error fetching spreadsheet data from sheet \"${sheetName}\":`, error);\n        return [];\n    }\n};\n\nconst parseCSV = (csv) => {\n    const rows = csv.trim().split(\"\\n\");\n    const headers = rows.shift().split(\",\").map(h => h.replace(/(^\"|\"$)/g, \"\"));\n    return rows.map(row => {\n        const values = row.split(\",\").map(value => value.replace(/(^\"|\"$)/g, \"\"));\n        const obj = {};\n        headers.forEach((header, index) => {\n            if (header) {\n                obj[header] = values[index] || null;\n            }\n        });\n        return obj;\n    });\n};\n\nconst ShoppingPage = () => {\n    const dispatch = useDispatch();\n    const isCartVisible = useSelector(selectCartVisibility);\n\n    useEffect(() => {\n        const loadItems = async () => {\n            const data = await fetchSpreadsheetData(config.PRODUCTS_SHEETNAME);\n            dispatch(updateStoreItems(data));\n            dispatch(cleanCart()); // Validate cart after store items update\n        };\n\n        loadItems();\n    }, [dispatch]);\n\n    const handleToggleCart = () => {\n        dispatch(toggleCartView());\n    };\n\n    return (\n        <div className={otherstyles.container}>\n            <Header />\n            <button className={styles.cartToggleButton} onClick={handleToggleCart}>\n                {isCartVisible ? 'Hide Cart' : 'View Cart'}\n            </button>\n            {isCartVisible && <ShoppingCart />}\n            <div className={styles.itemListContainer}>\n                <StoreItems />\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default ShoppingPage;\n","import React from \"react\";\nimport OnlineStore from \"../components/OnlineStore\"\n\nconst ShoppingPage = () => {\n\n    return <OnlineStore />\n};\n\nexport default ShoppingPage;\n","// extracted by mini-css-extract-plugin\nexport var arrow_span = \"index-module--arrow_span--f48bd\";\nexport var blink = \"index-module--blink--322c7\";\nexport var blinkingCursor = \"index-module--blinking-cursor--e2be6\";\nexport var bottom = \"index-module--bottom--eeaab\";\nexport var center = \"index-module--center--6c63b\";\nexport var center_text_block = \"index-module--center_text_block--9d594\";\nexport var centeredContent = \"index-module--centered-content--a9414\";\nexport var chart = \"index-module--chart--bfad1\";\nexport var chart_padding = \"index-module--chart_padding--43000\";\nexport var clapper = \"index-module--clapper--2467e\";\nexport var container = \"index-module--container--9e7f9\";\nexport var footer = \"index-module--footer--8d7ca\";\nexport var green = \"index-module--green--21d20\";\nexport var headerContainer = \"index-module--header-container--ec9de\";\nexport var headerLink = \"index-module--header-link--92332\";\nexport var headerTitle = \"index-module--header-title--f56cb\";\nexport var header_border = \"index-module--header_border--a723c\";\nexport var header_left = \"index-module--header_left--4a4e3\";\nexport var languageBash = \"index-module--language-bash--4fcf1\";\nexport var languageJavascript = \"index-module--language-javascript--99e27\";\nexport var languagePython = \"index-module--language-python--5f701\";\nexport var languageTxt = \"index-module--language-txt--08b27\";\nexport var large_header = \"index-module--large_header--bc628\";\nexport var list = \"index-module--list--d72e8\";\nexport var med_header = \"index-module--med_header--15f3f\";\nexport var p_left = \"index-module--p_left--cb0fc\";\nexport var pay = \"index-module--pay--78de8\";\nexport var pay_free = \"index-module--pay_free--38215\";\nexport var pay_look = \"index-module--pay_look--39f53\";\nexport var picture = \"index-module--picture--f5ee0\";\nexport var please_email = \"index-module--please_email--87a1a\";\nexport var purple = \"index-module--purple--30baa\";\nexport var responsiveText = \"index-module--responsive-text--ea4a4\";\nexport var right = \"index-module--right--775d2\";\nexport var service_header = \"index-module--service_header--d0303\";\nexport var simpleClose = \"index-module--simple-close--ed079\";\nexport var simpleContainer = \"index-module--simple-container--18cad\";\nexport var simpleExtInfo = \"index-module--simple-ext-info--3d384\";\nexport var simplePrint = \"index-module--simple-print--e1f95\";\nexport var small_text = \"index-module--small_text--1233c\";\nexport var svgButton = \"index-module--svg-button--23da3\";\nexport var textLeft = \"index-module--text-left--7bf00\";\nexport var title_link = \"index-module--title_link--c0cdd\";\nexport var title_picture = \"index-module--title_picture--75853\";\nexport var title_picture_small = \"index-module--title_picture_small--2b61b\";\nexport var tooltip = \"index-module--tooltip--b5884\";\nexport var tooltiptext = \"index-module--tooltiptext--e375b\";\nexport var video = \"index-module--video--97740\";\nexport var video_container = \"index-module--video_container--dd5e5\";"],"names":["IndexPage","React","className","styles","style","fontSize","Link","to","closeButton","fullScreenImage","fullScreenModal","itemImage","itemList","modalContent","removeButton","_ref","quantity","stock","onDecrease","onIncrease","onClick","e","stopPropagation","item","onClose","handleToggle","handleQuantityChange","isInCart","cart","itemInCart","find","cartItem","id","setQuantity","useState","useEffect","handleQuantityUpdate","newQuantity","clampedQuantity","Math","min","max","handleKeyDown","event","key","document","addEventListener","removeEventListener","src","image","alt","name","description","price","htmlFor","QuantityControl","disabled","ItemList","dispatch","useDispatch","useSelector","selectCart","storeItems","state","onlineStore","selectedItem","setSelectedItem","isSingleColumn","setIsSingleColumn","checkColumnLayout","element","querySelector","gridTemplateColumns","getComputedStyle","getPropertyValue","split","length","window","toggleItemInCart","updateItemQuantity","some","map","index","handleItemClick","width","height","ItemDetailModal","handleCloseModal","paypalRef","onApprove","createOrder","paypalRenderedRef","useRef","current","console","log","script","createElement","async","onload","paypal","Buttons","shape","layout","color","label","render","body","appendChild","contains","removeChild","usePaypalButtons","data","actions","reduce","sum","parseFloat","toFixed","response","fetch","method","headers","JSON","stringify","orderData","json","Error","error","_orderData$purchase_u","_orderData$purchase_u2","_orderData$purchase_u3","_orderData$purchase_u4","orderID","purchase_units","payments","captures","_orderData$purchase_u5","_orderData$purchase_u6","_orderData$purchase_u7","_orderData$purchase_u8","transaction","clearCart","alert","ref","mockData","success","handleMockPurchase","ViewCart","Number","total","handleRemoveItem","PayPalButtons","parseCSV","csv","rows","trim","shift","h","replace","row","values","value","obj","forEach","header","ShoppingPage","isCartVisible","selectCartVisibility","url","config","SPREADSHEET_ID_PRODUCTS","sheetName","ok","status","csvText","text","fetchSpreadsheetData","PRODUCTS_SHEETNAME","updateStoreItems","cleanCart","loadItems","otherstyles","Header","handleToggleCart","toggleCartView","ShoppingCart","StoreItems","Footer","OnlineStore","arrow_span","blinkingCursor","center","center_text_block","chart_padding","container","footer","green","headerContainer","headerLink","headerTitle","header_border","header_left","large_header","med_header","p_left","pay","pay_free","please_email","purple","service_header","small_text","svgButton","title_picture","title_picture_small","tooltip","tooltiptext"],"sourceRoot":""}