{"version":3,"file":"component---src-pages-records-services-js-56565e9ad942a9d880ee.js","mappings":"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","sources":["webpack://walkum/./src/components/links/headerLink.module.css","webpack://walkum/./src/components/links/modularHeaderLink.js","webpack://walkum/./src/components/header.js","webpack://walkum/./src/components/records/services.js","webpack://walkum/./src/pages/records/services.js","webpack://walkum/./src/spreadsheet/renderTable.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var blink = \"headerLink-module--blink--bdfec\";\nexport var blinkingCursor = \"headerLink-module--blinkingCursor--59495\";\nexport var phraseContainer = \"headerLink-module--phraseContainer--9d1b4\";\nexport var responsiveSvg = \"headerLink-module--responsiveSvg--e821b\";\nexport var svgButton = \"headerLink-module--svgButton--d9016\";","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from 'react-redux';\nimport { Link } from \"gatsby\";\nimport * as styles from \"./headerLink.module.css\";\n\nconst ModularHeaderLink = ({ leftWord = \"walkum\", leftLinkTo=\"/\", rightWord, rightLinkTo=\".\", cursorColor = \"#FFD700\" }) => {\n    const [blinkSpeed, setBlinkSpeed] = useState(getRandomBlinkSpeed());\n    const accountInfo = useSelector((state) => state.account.accountInfo);\n\n    // Function to generate a random blink speed between 1s and 3s\n    function getRandomBlinkSpeed() {\n        return Math.random() * (3000 - 1000) + 1000; // Random value between 1000ms and 3000ms\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setBlinkSpeed(getRandomBlinkSpeed()); // Update blink speed every 5 seconds\n        }, 5000);\n\n        return () => clearInterval(interval); // Cleanup on unmount\n    }, []);\n\n    if (!accountInfo) {\n        return null;\n    }\n\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <div className={styles.phraseContainer}>\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 1200 300\"\n                    width=\"100%\"\n                    height=\"auto\"\n                    className={styles.responsiveSvg}\n                >\n                    <g transform=\"translate(600, 150)\" textAnchor=\"middle\">\n                        {/* Left Word */}\n                        <Link to={leftLinkTo}>\n                            <text\n                                x=\"-300\"\n                                fill=\"white\"\n                                fontFamily=\"Courier\"\n                                fontSize=\"90px\"\n                                className={styles.svgButton}\n                            >\n                                {leftWord}\n                            </text>\n                        </Link>\n\n                        {/* Blinking Cursor */}\n                        <text\n                            x=\"0\"\n                            fill={cursorColor}\n                            fontFamily=\"Courier\"\n                            fontSize=\"90px\"\n                            fontWeight=\"bold\"\n                            className={styles.blinkingCursor}\n                            style={{\n                                animationDuration: `${blinkSpeed}ms`,\n                                transform: \"scale(5, 5)\",\n                            }}\n                        >\n                            |\n                        </text>\n\n                        {/* Right Word */}\n                        <Link to={rightLinkTo}>\n                            <text\n                                x=\"300\"\n                                fill=\"white\"\n                                fontFamily=\"Courier\"\n                                fontSize=\"90px\"\n                                className={styles.svgButton}\n                            >\n                                {rightWord}\n                            </text>\n                        </Link>\n                    </g>\n                </svg>\n            </div>\n        </div>\n    );\n};\n\nexport default ModularHeaderLink;\n","// TODO: not used anymore\nimport * as styles from \"../styles/index.module.css\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport { useSelector } from 'react-redux';\n\nconst IndexPage = ({ prefix }) => {\n    const accountInfo = useSelector((state) => state.account.accountInfo);\n\n    if (!accountInfo) {\n        return null;\n    }\n\n    return (\n        <header>\n            <div className={styles.headerContainer}>\n                <h1 className={styles.headerTitle}>\n                    {prefix ? `${prefix} | ` : \"\"}\n                    <Link to=\"/\" className={styles.headerLink}>\n                        {accountInfo.name}\n                    </Link>\n                </h1>\n            </div>\n        </header>\n    );\n};\n\nexport default IndexPage;\n","import * as styles from \"../../styles/index.module.css\";\nimport * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport Footer from \"../../components/footer\";\nimport TableRows from \"../../spreadsheet/renderTable\";\nimport { useMenu } from \"../../spreadsheet/useSheet\";\nimport ModularHeaderLink from \"../links/modularHeaderLink\";\nimport { useSelector } from 'react-redux';\nimport config from '../../../config'\n\nconst RecordsPage = () => {\n\n    const sheetID = useSelector((state) => state.account.sheetID)\n\n    const { loading: serviceLoading, error: serviceError, data: serviceData } = useMenu({\n        spreadsheetId: sheetID,\n        sheetName: 'records-prices'\n    });\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.center}>\n                <ModularHeaderLink\n                    rightWord=\"records\"\n                    rightLinkTo=\"..\"\n                    cursorColor=\"#FFD700\"\n                    />\n                <h1>\n                    <span className={styles.purple}>I'm a musician</span>.\n                    <br />\n                    How do I work with<br />Walkum Records?\n                </h1>\n            </div>\n            {/* Step 1 */}\n            <h2>\n                Step 1: <span className={styles.purple}>Play for us</span>!\n            </h2>\n            <div className={styles.center_text_block}>\n            <p className={styles.p_left}>\n                Send a demo audio/video file of your playing. Showcase\n                yourself. Upload it to the internet and email a link to{\" \"}\n                <a href=\"mailto:walkum.llc@gmail.com\">walkum.llc@gmail.com</a>.\n            </p>\n            <p className={styles.p_left}>\n                We can get a general understanding of your musicianship with\n                a simple phone camera/microphone in order to decide how we'd\n                be useful to you. Provide whatever record quality you wish.\n            </p>\n            </div>\n            {/* Step 2 */}\n            <h2>\n                Step 2: <span className={styles.purple}>Select your service</span>\n            </h2>\n            <div className={styles.center}>\n\n                <table className={styles.table}>\n                    <thead>\n                        <tr>\n                            <th className={styles.service_header}>PRICE</th>\n                            <th className={styles.service_header}>Services (Customer Point-of-View)</th>\n                        </tr>\n                    </thead>\n                    <tbody><TableRows data={serviceData} /></tbody>\n                </table>\n            </div>\n            <div className={styles.small_text}></div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default RecordsPage;\n","import * as styles from \"../../styles/index.module.css\";\nimport * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport Header from \"../../components/header\";\nimport Footer from \"../../components/footer\";\nimport SEO from \"../../components/SEO\";\nimport WRServices from \"../../components/records/services\";\n\nconst RecordsPage = () => {\n    return (\n        <div>\n            <SEO\n                title=\"Walkum | Records\"\n                description=\"Learn how to collaborate with Walkum Records for unique and professional music production services. From demos to full song production, Walkum helps you create meaningful music.\"\n                keywords=\"music production, record services, Walkum Records, demo submission, music collaboration, song production, musician services, recording studio\"\n                url=\"https://walkum.xyz/records/services\"\n                />\n            <main>\n                <WRServices />\n            </main>\n        </div>\n    );\n};\n\nexport default RecordsPage;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport * as styles from \"../styles/index.module.css\";\n\nconst formatPrice = (price) => {\n    const match = price.match(/^(-?\\d+(\\.\\d+)?)(.*)$/); // Regex to split numeric part and additional text\n    if (!match) return price; // Return the original value if it doesn't match the pattern\n\n    const numericPart = parseFloat(match[1]);\n    const unit = match[3]?.trim(); // Capture any unit like '/hour'\n\n    if (isNaN(numericPart)) return price; // Return original value if numeric part is not a number\n\n    const formattedPrice = numericPart < 0 ? `-$${Math.abs(numericPart)}` : `$${numericPart}`;\n    return (unit ? `${formattedPrice} ${unit}` : formattedPrice).replace(/\\s+/g, ''); // Remove spaces\n};\n\nconst TableRows = ({ data }) => {\n    return data.map((item, index) => (\n        <tr key={index}>\n            <td>\n                <div className={styles.pay_free}>\n                    {item.paylink ? (\n                        <Link to={item.paylink} target=\"_blank\" rel=\"noopener noreferrer\">\n                            <button className={styles.priceButton}>\n                                <strong>{formatPrice(item.price)}</strong>\n                            </button>\n                        </Link>\n                    ) : (\n                        <strong>{formatPrice(item.price)}</strong>\n                    )}\n                </div>\n            </td>\n            <td>\n                <div className={styles.chart_padding}>\n                    <strong>{item.description}</strong>\n                    <br />\n                    <span className={styles.small_text}>\n                        <strong>{item.details}</strong>\n                    </span>\n                </div>\n            </td>\n        </tr>\n    ));\n};\n\nexport default TableRows;\n"],"names":["svgButton","_ref","leftWord","leftLinkTo","rightWord","rightLinkTo","cursorColor","blinkSpeed","setBlinkSpeed","useState","getRandomBlinkSpeed","accountInfo","useSelector","state","account","Math","random","useEffect","interval","setInterval","clearInterval","React","style","display","justifyContent","className","xmlns","viewBox","width","height","transform","textAnchor","Link","to","x","fill","fontFamily","fontSize","styles","fontWeight","animationDuration","RecordsPage","sheetID","loading","serviceLoading","error","serviceError","data","serviceData","useMenu","spreadsheetId","sheetName","ModularHeaderLink","href","TableRows","Footer","SEO","title","description","keywords","url","WRServices","formatPrice","price","_match$","match","numericPart","parseFloat","unit","trim","isNaN","formattedPrice","abs","replace","map","item","index","key","paylink","target","rel","details"],"sourceRoot":""}