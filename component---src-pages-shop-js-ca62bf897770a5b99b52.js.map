{"version":3,"file":"component---src-pages-shop-js-ca62bf897770a5b99b52.js","mappings":"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","sources":["webpack://walkum/./src/components/footer.js","webpack://walkum/./src/components/header.js","webpack://walkum/./src/styles/shopping.module.css","webpack://walkum/./src/components/merchant/QuantityControl.js","webpack://walkum/./src/components/merchant/itemDetailModal.js","webpack://walkum/./src/components/merchant/storeItems.js","webpack://walkum/./src/components/merchant/checkout/usePaypalButtons.js","webpack://walkum/./src/components/merchant/checkout/index.js","webpack://walkum/./src/components/merchant/cart.js","webpack://walkum/./src/components/merchant/index.js","webpack://walkum/./src/pages/shop.js","webpack://walkum/./src/styles/index.module.css"],"sourcesContent":["import * as styles from \"../styles/index.module.css\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst IndexPage = () => {\n    return (\n        <div className={styles.footer}>\n            <p style={{ fontSize: \"10px\" }}>\n                Made with <span>&#10084;&#65039;</span> by{\" \"}\n                <Link to=\"https://walkum.xyz/sites\">Walkum</Link>\n            </p>\n        </div>\n    );\n};\n\nexport default IndexPage;\n\nexport const Head = () => <title>Home Page</title>;\n","import * as styles from \"../styles/index.module.css\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport { useSelector } from 'react-redux';\n\nconst IndexPage = ({ prefix }) => {\n    const accountInfo = useSelector((state) => state.account.accountInfo);\n\n    if (!accountInfo) {\n        return null;\n    }\n\n    return (\n        <header>\n            <div className={styles.headerContainer}>\n                <h1 className={styles.headerTitle}>\n                    {prefix ? `${prefix} | ` : \"\"}\n                    <Link to=\"/\" className={styles.headerLink}>\n                        {accountInfo.name}\n                    </Link>\n                </h1>\n            </div>\n        </header>\n    );\n};\n\nexport default IndexPage;\n","// extracted by mini-css-extract-plugin\nexport var cart = \"shopping-module--cart--3c207\";\nexport var cartToggleButton = \"shopping-module--cartToggleButton--3db78\";\nexport var closeButton = \"shopping-module--closeButton--fdfa2\";\nexport var fullScreenImage = \"shopping-module--fullScreenImage--3e206\";\nexport var fullScreenModal = \"shopping-module--fullScreenModal--d5a88\";\nexport var item = \"shopping-module--item--7b82f\";\nexport var itemBackground = \"shopping-module--itemBackground--65546\";\nexport var itemImage = \"shopping-module--itemImage--78d3d\";\nexport var itemList = \"shopping-module--itemList--d6d43\";\nexport var modalContent = \"shopping-module--modalContent--12e4c\";\nexport var priceEach = \"shopping-module--priceEach--2c4e6\";\nexport var removeButton = \"shopping-module--removeButton--04c91\";","import React from \"react\";\n\nconst QuantityControl = ({ quantity, stock, onDecrease, onIncrease }) => (\n    <div>\n        <button\n            onClick={(e) => {\n                e.stopPropagation();\n                onDecrease();\n            }}\n\n        >\n            -\n        </button>\n        <span>   {quantity}   </span>\n        <button\n            onClick={(e) => {\n                e.stopPropagation();\n                onIncrease();\n            }}\n        >\n            +\n        </button>\n    </div>\n);\n\nexport default QuantityControl;\n","import * as styles from \"../../styles/shopping.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport QuantityControl from \"./QuantityControl\";\n\nconst ItemDetailModal = ({\n    item,\n    onClose,\n    handleToggle,\n    handleQuantityChange,\n    isInCart,\n    cart,\n}) => {\n    const itemInCart = cart.find((cartItem) => cartItem.id === item.id); // Get item from cart\n    const [quantity, setQuantity] = useState(itemInCart ? itemInCart.quantity : 1);\n\n    // Synchronize quantity with Redux when the cart updates\n    useEffect(() => {\n        if (itemInCart) {\n            setQuantity(itemInCart.quantity);\n        }\n    }, [itemInCart]);\n\n    const handleQuantityUpdate = (newQuantity) => {\n        const clampedQuantity = Math.min(Math.max(newQuantity, 1), item.stock);\n        setQuantity(clampedQuantity);\n        handleQuantityChange(item, clampedQuantity); // Update Redux store\n    };\n\n    useEffect(() => {\n        const handleKeyDown = (event) => {\n            if (event.key === \"Escape\") {\n                onClose(); // Close modal on Escape key\n            }\n        };\n\n        // Add event listener for Escape key\n        document.addEventListener(\"keydown\", handleKeyDown);\n\n        // Cleanup listener on unmount\n        return () => {\n            document.removeEventListener(\"keydown\", handleKeyDown);\n        };\n    }, [onClose]);\n\n    return (\n        <div className={styles.fullScreenModal} onClick={onClose}>\n            <div\n                className={styles.modalContent}\n                onClick={(e) => e.stopPropagation()} // Prevent closing on modal content click\n            >\n                <button className={styles.closeButton} onClick={onClose}>\n                    &times; Close\n                </button>\n                <img\n                    src={item.image}\n                    alt={item.name}\n                    className={styles.fullScreenImage}\n                />\n                <h3>{item.name}</h3>\n                <p>{item.description}</p>\n                <p>Price: ${item.price}</p>\n                <p>Stock: {item.stock}</p>\n\n                {isInCart(item.id) && (\n                    <div>\n                        <label htmlFor=\"quantityInput\">Quantity: </label>\n                        <QuantityControl\n                            quantity={quantity}\n                            stock={item.stock}\n                            onDecrease={() => handleQuantityUpdate(quantity - 1)}\n                            onIncrease={() => handleQuantityUpdate(quantity + 1)}\n                        />\n                    </div>\n                )}\n\n                <button\n                    onClick={() => handleToggle(item)}\n                    className={isInCart(item.id) ? styles.removeButton : \"\"}\n                    disabled={item.stock <= 0}\n                >\n                    {isInCart(item.id) ? \"Remove from Cart\" : \"Add to Cart\"}\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default ItemDetailModal;\n","import * as styles from \"../../styles/shopping.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    toggleItemInCart,\n    updateItemQuantity,\n    selectCart,\n} from \"../../state/onlineStoreSlice\";\nimport ItemDetailModal from \"./itemDetailModal\";\nimport QuantityControl from \"./QuantityControl\";\n\nconst ItemList = () => {\n    const dispatch = useDispatch();\n    const cart = useSelector(selectCart);\n    const storeItems = useSelector((state) => state.onlineStore.storeItems);\n\n    const [selectedItem, setSelectedItem] = useState(null);\n    const [isSingleColumn, setIsSingleColumn] = useState(false);\n\n    // Check for single-column layout using a media query\n    useEffect(() => {\n        const checkColumnLayout = () => {\n            const element = document.querySelector(`.${styles.itemList}`);\n            if (element) {\n                const computedStyle = getComputedStyle(element);\n                const gridTemplateColumns = computedStyle.getPropertyValue(\"grid-template-columns\");\n                setIsSingleColumn(gridTemplateColumns.split(\" \").length === 1);\n            }\n        };\n\n        checkColumnLayout();\n        window.addEventListener(\"resize\", checkColumnLayout);\n\n        return () => {\n            window.removeEventListener(\"resize\", checkColumnLayout);\n        };\n    }, []);\n\n    const handleToggle = (item) => {\n        dispatch(toggleItemInCart(item));\n    };\n\n    const handleQuantityChange = (item, quantity) => {\n        dispatch(updateItemQuantity({ id: item.id, quantity }));\n    };\n\n    const isInCart = (id) => cart.some((item) => item.id === id);\n\n    const handleItemClick = (item) => {\n        if (!isSingleColumn) {\n            setSelectedItem(item); // Only allow modal if not single-column\n        }\n    };\n\n    const handleCloseModal = () => {\n        setSelectedItem(null);\n    };\n\n    return (\n        <div className={styles.itemList}>\n            {storeItems.map((item, index) => {\n                const itemInCart = cart.find((cartItem) => cartItem.id === item.id);\n                const quantity = itemInCart ? itemInCart.quantity : 1;\n\n                return (\n                    <div\n                        key={index}\n                        className={styles.item}\n                        onClick={() => handleItemClick(item)}\n                    >\n                        <img\n                            src={item.image}\n                            alt={item.name}\n                            className={styles.itemImage}\n                            width={100}\n                            height={100}\n                        />\n                        <h3>{item.name}</h3>\n                        <p>{item.description}</p>\n                        <p>${item.price}</p>\n                        <p># Remaining: {item.stock}</p>\n\n                        {isInCart(item.id) ? (\n                            <button\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    handleToggle(item);\n                                }}\n                                className={styles.removeButton}\n                            >\n                                Remove from Cart\n                            </button>\n                        ) : (\n                            <button\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    handleToggle(item);\n                                }}\n                                disabled={item.stock <= 0}\n                            >\n                                Add to Cart\n                            </button>\n                        )}\n\n                        {isInCart(item.id) && (\n                            <QuantityControl\n                                quantity={quantity}\n                                stock={item.stock}\n                                onDecrease={() => handleQuantityChange(item, Math.max(1, quantity - 1))}\n                                onIncrease={() => handleQuantityChange(item, Math.min(item.stock, quantity + 1))}\n                                />\n                        )}\n                    </div>\n                );\n            })}\n\n            {!isSingleColumn && selectedItem && (\n                <ItemDetailModal\n                    item={selectedItem}\n                    onClose={handleCloseModal}\n                    handleToggle={handleToggle}\n                    handleQuantityChange={handleQuantityChange}\n                    cart={cart}\n                    isInCart={isInCart}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default ItemList;\n","import { useEffect, useRef } from \"react\";\n\nconst usePaypalButtons = ({ cart, paypalRef, onApprove, createOrder }) => {\n    const paypalRenderedRef = useRef(false);\n\n    useEffect(() => {\n        if (paypalRenderedRef.current) {\n            console.log(\"PayPal buttons already rendered. Skipping initialization.\");\n            return;\n        }\n\n        const script = document.createElement(\"script\");\n        script.src = `https://www.paypal.com/sdk/js?client-id=${process.env.PAYPAL_CLIENT_ID}&buyer-country=US&currency=USD&components=buttons&enable-funding=venmo,paylater,card`;\n        script.async = true;\n\n        script.onload = () => {\n            if (window.paypal && paypalRef.current) {\n                paypalRenderedRef.current = true;\n                window.paypal.Buttons({\n                    style: {\n                        shape: \"pill\",\n                        layout: \"vertical\",\n                        color: \"blue\",\n                        label: \"pay\",\n                    },\n                    createOrder,\n                    onApprove,\n                }).render(paypalRef.current);\n            }\n        };\n\n        document.body.appendChild(script);\n\n        return () => {\n            if (paypalRenderedRef.current) {\n                console.log(\"Cleaning up PayPal buttons.\");\n                paypalRenderedRef.current = false;\n            }\n\n            if (document.body.contains(script)) {\n                document.body.removeChild(script);\n            }\n        };\n    }, [cart, paypalRef, createOrder, onApprove]);\n};\n\nexport default usePaypalButtons;\n","import React, { useRef } from \"react\";\nimport { clearCart } from \"../../../state/onlineStoreSlice\";\nimport { useDispatch } from \"react-redux\";\nimport * as styles from \"./index.module.css\";\nimport usePaypalButtons from \"./usePaypalButtons\";\n\nconst PaypalButton = ({ cart }) => {\n    const dispatch = useDispatch();\n    const paypalRef = useRef(null);\n\n    const serverIP = process.env.SERVER_IP;\n    const port = process.env.PORT;\n\n    // Handlers for PayPal buttons\n    const createOrder = async (data, actions) => {\n        try {\n            const totalAmount = cart.reduce(\n                (sum, item) => sum + parseFloat(item.price) * item.quantity,\n                0\n            ).toFixed(2);\n\n            const response = await fetch(`http://${serverIP}:${port}/api/orders`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ cart }),\n            });\n\n            const orderData = await response.json();\n            console.log(\"createOrder Response:\", orderData);\n\n            if (orderData.id) {\n                return orderData.id;\n            }\n            throw new Error(\"Failed to create order\");\n        } catch (error) {\n            console.error(\"createOrder Error:\", error);\n            throw new Error(\"Could not initiate PayPal Checkout\");\n        }\n    };\n\n    const onApprove = async (data, actions) => {\n        try {\n            const response = await fetch(\n                `http://${serverIP}:${port}/api/orders/${data.orderID}/capture`,\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                }\n            );\n\n            const orderData = await response.json();\n            console.log(\"onApprove Response:\", orderData);\n\n            if (orderData?.purchase_units?.[0]?.payments?.captures?.[0]) {\n                const transaction =\n                    orderData?.purchase_units?.[0]?.payments?.captures?.[0];\n                console.log(\"Transaction completed:\", transaction);\n\n                dispatch(clearCart());\n            } else {\n                throw new Error(\"Capture failed\");\n            }\n        } catch (error) {\n            console.error(\"onApprove Error:\", error);\n            alert(\"Sorry, your transaction could not be processed.\");\n        }\n    };\n\n    // Initialize PayPal buttons\n    usePaypalButtons({ cart, paypalRef, createOrder, onApprove });\n\n    return (\n        <div ref={paypalRef}></div>\n    );\n};\n\nexport default PaypalButton;\n","import * as styles from \"../../styles/shopping.module.css\";\nimport * as otherstyles from \"../../styles/index.module.css\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCart, updateItemQuantity, toggleItemInCart } from '../../state/onlineStoreSlice';\nimport PayPalButtons from \"./checkout\";\nimport QuantityControl from \"./QuantityControl\";\n\nconst ViewCart = () => {\n    const dispatch = useDispatch();\n    const cart = useSelector(selectCart);\n\n    const handleQuantityChange = (item, quantity) => {\n        const newQuantity = Math.max(1, Math.min(quantity, item.stock)); // Limit between 1 and stock\n        dispatch(updateItemQuantity({ id: item.id, quantity: newQuantity }));\n    };\n\n    const handleRemoveItem = (item) => {\n        dispatch(toggleItemInCart(item)); // Use toggle to remove item\n    };\n\n    if (!cart || cart.length === 0) {\n        return null\n    }\n\n    return (\n        <div className={styles.cart}>\n            <br />\n            <table className={styles.cartTable}>\n                <thead>\n                    <tr>\n                        <th>Item</th>\n                        <th>Quantity</th>\n                        <th>Total</th>\n                        <th>Remove</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {cart.map((item, index) => {\n                        const price = Number(item.price) || 0;\n                        const quantity = Number(item.quantity) || 0;\n                        const total = price * quantity;\n\n                        return (\n                            <tr key={index}>\n                                <td className={otherstyles.center}>\n                                    {item.name || \"Unnamed Item\"}<br />\n                                    <span className={styles.priceEach}>${price.toFixed(2)}</span>\n                                </td>\n                                <td>\n                                    <QuantityControl\n                                        quantity={quantity}\n                                        stock={item.stock}\n                                        onDecrease={() => handleQuantityChange(item, Math.max(1, quantity - 1))}\n                                        onIncrease={() => handleQuantityChange(item, Math.min(item.stock, quantity + 1))}\n                                        />\n                                </td>\n                                <td>${total.toFixed(2)}</td>\n                                <td>\n                                    <button\n                                        onClick={() => handleRemoveItem(item)}\n                                        className={styles.removeButton}\n                                    >\n                                        Remove\n                                    </button>\n                                </td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n            <h3 className={styles.grandTotal}>\n                Grand Total: $\n                {cart.reduce(\n                    (total, item) =>\n                        total + (Number(item.price) || 0) * (Number(item.quantity) || 0),\n                    0\n                ).toFixed(2)}\n            </h3>\n\n            <PayPalButtons cart={cart} />\n        </div>\n    );\n};\n\nexport default ViewCart;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport StoreItems from './storeItems';\nimport ShoppingCart from './cart';\nimport Footer from '../footer';\nimport Header from '../header';\nimport {\n    toggleCartView,\n    selectCartVisibility,\n    updateStoreItems,\n    cleanCart,\n} from '../../state/onlineStoreSlice';\nimport config from '../../../config';\nimport * as styles from \"../../styles/shopping.module.css\";\nimport * as otherstyles from \"../../styles/index.module.css\";\nimport {\n    useKeyValue,\n    useMenu,\n} from \"../spreadsheet/useSheet\";\n\nconst ShoppingPage = () => {\n    const dispatch = useDispatch();\n    const isCartVisible = useSelector(selectCartVisibility);\n\n    const { loading, error, data: menuData } = useMenu({\n        spreadsheetId: config.spreadsheets.account.id,\n        sheetName: \"products\",\n    });\n\n    useEffect(() => {\n        if (!loading && !error && menuData) {\n            dispatch(updateStoreItems(menuData));\n            dispatch(cleanCart()); // Validate cart after store items update\n        }\n    }, [loading, error, menuData, dispatch]);\n\n    const handleToggleCart = () => {\n        dispatch(toggleCartView());\n    };\n\n    if (loading) return <p>Loading store items...</p>;\n    if (error) return <p>Error loading store items: {error}</p>;\n\n    return (\n        <div>\n            <div className={otherstyles.container}>\n                <Header prefix={`storefront`}/>\n                <button className={styles.cartToggleButton} onClick={handleToggleCart}>\n                    {isCartVisible ? (\n                        <>\n                            Hide <span role=\"img\" aria-label=\"cart\">{'\\u{1F6D2}'}</span>\n                        </>\n                    ) : (\n                        <>\n                            Your Cart <span role=\"img\" aria-label=\"cart\">{'\\u{1F6D2}'}</span>\n                        </>\n                    )}\n                </button>\n\n                {isCartVisible && <ShoppingCart />}\n            </div>\n            <div className={styles.itemListContainer}>\n                <StoreItems />\n            </div>\n            <div className={otherstyles.container}>\n                <Footer />\n            </div>\n        </div>\n    );\n};\n\nexport default ShoppingPage;\n","import React from \"react\";\nimport MerchantStore from \"../components/merchant\"\nconst config = require(\"../../config\");\n\nconst MerchantPage = () => {\n\n    return <MerchantStore />\n};\n\nexport default MerchantPage;\n","// extracted by mini-css-extract-plugin\nexport var arrow_span = \"index-module--arrow_span--f48bd\";\nexport var blink = \"index-module--blink--322c7\";\nexport var blinkingCursor = \"index-module--blinking-cursor--e2be6\";\nexport var bottom = \"index-module--bottom--eeaab\";\nexport var center = \"index-module--center--6c63b\";\nexport var center_text_block = \"index-module--center_text_block--9d594\";\nexport var centeredContent = \"index-module--centered-content--a9414\";\nexport var chart = \"index-module--chart--bfad1\";\nexport var chart_padding = \"index-module--chart_padding--43000\";\nexport var clapper = \"index-module--clapper--2467e\";\nexport var container = \"index-module--container--9e7f9\";\nexport var footer = \"index-module--footer--8d7ca\";\nexport var green = \"index-module--green--21d20\";\nexport var headerContainer = \"index-module--header-container--ec9de\";\nexport var headerLink = \"index-module--header-link--92332\";\nexport var headerTitle = \"index-module--header-title--f56cb\";\nexport var header_border = \"index-module--header_border--a723c\";\nexport var header_left = \"index-module--header_left--4a4e3\";\nexport var languageBash = \"index-module--language-bash--4fcf1\";\nexport var languageJavascript = \"index-module--language-javascript--99e27\";\nexport var languagePython = \"index-module--language-python--5f701\";\nexport var languageTxt = \"index-module--language-txt--08b27\";\nexport var large_header = \"index-module--large_header--bc628\";\nexport var list = \"index-module--list--d72e8\";\nexport var med_header = \"index-module--med_header--15f3f\";\nexport var p_left = \"index-module--p_left--cb0fc\";\nexport var pay = \"index-module--pay--78de8\";\nexport var pay_free = \"index-module--pay_free--38215\";\nexport var pay_look = \"index-module--pay_look--39f53\";\nexport var picture = \"index-module--picture--f5ee0\";\nexport var please_email = \"index-module--please_email--87a1a\";\nexport var purple = \"index-module--purple--30baa\";\nexport var responsiveText = \"index-module--responsive-text--ea4a4\";\nexport var right = \"index-module--right--775d2\";\nexport var service_header = \"index-module--service_header--d0303\";\nexport var simpleClose = \"index-module--simple-close--ed079\";\nexport var simpleContainer = \"index-module--simple-container--18cad\";\nexport var simpleExtInfo = \"index-module--simple-ext-info--3d384\";\nexport var simplePrint = \"index-module--simple-print--e1f95\";\nexport var small_text = \"index-module--small_text--1233c\";\nexport var svgButton = \"index-module--svg-button--23da3\";\nexport var textLeft = \"index-module--text-left--7bf00\";\nexport var title_link = \"index-module--title_link--c0cdd\";\nexport var title_picture = \"index-module--title_picture--75853\";\nexport var title_picture_small = \"index-module--title_picture_small--2b61b\";\nexport var tooltip = \"index-module--tooltip--b5884\";\nexport var tooltiptext = \"index-module--tooltiptext--e375b\";\nexport var video = \"index-module--video--97740\";\nexport var video_container = \"index-module--video_container--dd5e5\";"],"names":["IndexPage","React","className","styles","style","fontSize","Link","to","_ref","prefix","accountInfo","useSelector","state","account","name","cartToggleButton","closeButton","fullScreenImage","fullScreenModal","itemImage","itemList","modalContent","priceEach","removeButton","quantity","stock","onDecrease","onIncrease","onClick","e","stopPropagation","item","onClose","handleToggle","handleQuantityChange","isInCart","cart","itemInCart","find","cartItem","id","setQuantity","useState","useEffect","handleQuantityUpdate","newQuantity","clampedQuantity","Math","min","max","handleKeyDown","event","key","document","addEventListener","removeEventListener","src","image","alt","description","price","htmlFor","QuantityControl","disabled","ItemList","dispatch","useDispatch","selectCart","storeItems","onlineStore","selectedItem","setSelectedItem","isSingleColumn","setIsSingleColumn","checkColumnLayout","element","querySelector","gridTemplateColumns","getComputedStyle","getPropertyValue","split","length","window","toggleItemInCart","updateItemQuantity","some","map","index","handleItemClick","width","height","ItemDetailModal","handleCloseModal","paypalRef","onApprove","createOrder","paypalRenderedRef","useRef","current","console","log","script","createElement","process","PAYPAL_CLIENT_ID","async","onload","paypal","Buttons","shape","layout","color","label","render","body","appendChild","contains","removeChild","serverIP","SERVER_IP","port","PORT","usePaypalButtons","data","actions","reduce","sum","parseFloat","toFixed","response","fetch","method","headers","JSON","stringify","orderData","json","Error","error","_orderData$purchase_u","_orderData$purchase_u2","_orderData$purchase_u3","_orderData$purchase_u4","orderID","purchase_units","payments","captures","_orderData$purchase_u5","_orderData$purchase_u6","_orderData$purchase_u7","_orderData$purchase_u8","transaction","clearCart","alert","ref","ViewCart","Number","total","otherstyles","handleRemoveItem","PayPalButtons","ShoppingPage","isCartVisible","selectCartVisibility","loading","menuData","useMenu","spreadsheetId","config","spreadsheets","sheetName","updateStoreItems","cleanCart","Header","handleToggleCart","toggleCartView","role","ShoppingCart","StoreItems","Footer","require","MerchantPage","MerchantStore","arrow_span","blinkingCursor","center","center_text_block","chart_padding","container","footer","green","headerContainer","headerLink","headerTitle","header_border","header_left","large_header","med_header","p_left","pay","pay_free","please_email","purple","service_header","small_text","svgButton","title_picture","title_picture_small","tooltip","tooltiptext"],"sourceRoot":""}